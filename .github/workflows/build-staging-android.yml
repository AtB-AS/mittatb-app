name: Build staging Android project
on:
  push:
    branches:
      - master

jobs:
  build-ios:
    name: Build Android
    timeout-minutes: 90
    runs-on: macos-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v1
      - name: Set global env vars
        run: |
          echo "BUILD_ID=$(date +%s)" >> $GITHUB_ENV
          echo "APP_ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "APP_ORG=atb" >> $GITHUB_ENV
          echo "KEYSTORE_PATH=./keystore.jks" >> $GITHUB_ENV
      - name: Decrypt env files
        run: sh ./scripts/git-crypt-unlock.sh
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      - name: install node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get potential cached node_modules
        uses: actions/cache@v2
        id: modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/patches/**.patch') }}
      - name: Install node_modules
        if: steps.modules-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Bundle install, fastlane dependencies
        run: bundle install
      - name: Set environment
        run: sh ./scripts/override-environment.sh $APP_ENVIRONMENT $APP_ORG
      - name: Override native config files
        run: sh ./scripts/override-config-files.sh
      - name: Get potential cached APK
        uses: actions/cache@v2
        id: apk-cache
        with:
          path: "app-staging.apk"
          key: ${{ runner.os }}-android-cache-${{ hashFiles('android/**') }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/patches/**.patch') }}
      - name: Get Android keystore
        run: sh ./scripts/android/create-keystore-file.sh
        env:
          GPG_KEYSTORE_FILE: ${{ secrets.GPG_KEYSTORE_FILE }}
          GPG_KEYSTORE_PASS: ${{ secrets.GPG_KEYSTORE_PASS }}
      - name: Generate icons
        if: steps.apk-cache.outputs.cache-hit != 'true'
        run: brew install imagemagick && yarn icons
      - name: Generate boot splash
        run: yarn bootsplash-atb
      - name: Run fastlane build
        if: steps.apk-cache.outputs.cache-hit != 'true'
        run: fastlane android build
        env:
          KEYSTORE_PASS: ${{ secrets.ATB_KEYSTORE_PASS }}
          KEY_PASS: ${{ secrets.ATB_KEY_PASS }}
          KEY_ALIAS: ${{ secrets.ATB_KEY_ALIAS }}
      - name: Replace apk bundle
        if: steps.apk-cache.outputs.cache-hit == 'true'
        run: sh ./scripts/android/replace-bundle.sh
        env:
          APK_FILE_NAME: app-staging.apk
          KEYSTORE_FILE: keystore.jks
          KEYSTORE_PASS: ${{ secrets.ATB_KEYSTORE_PASS }}
          KEY_PASS: ${{ secrets.ATB_KEY_PASS }}
          KEY_ALIAS: ${{ secrets.ATB_KEY_ALIAS }}
      - name: Distribute to AppCenter
        run: fastlane android appcenter_staging
        env:
          APPCENTER_API_KEY: ${{ secrets.APPCENTER_ANDROID_API_KEY }}
      - name: Upload bundle and source maps
        run: sh ./scripts/android/upload-sourcemaps.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
