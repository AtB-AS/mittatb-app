name: Build staging Android project
on:
  push:
    branches:
      - master
      - cbrevik/upgrade-react-native-0.66.3

jobs:
  build-android:
    name: Build Android
    strategy:
      matrix:
        org: [atb, nfk]
    environment: ${{ matrix.org }}
    timeout-minutes: 90
    runs-on: macos-11
    steps:
      - name: Checkout project
        uses: actions/checkout@v1
      - name: Set global env vars
        run: |
          echo "BUILD_ID=$(date +%s)" >> $GITHUB_ENV
          echo "APP_ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "KEYSTORE_PATH=./android/app/keystore.jks" >> $GITHUB_ENV
          echo "APK_FILE_NAME=app-staging.apk" >> $GITHUB_ENV
      - name: Decrypt env files
        run: sh ./scripts/git-crypt-unlock.sh
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      - name: install node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get potential cached node_modules
        uses: actions/cache@v2
        id: modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/patches/**.patch') }}-${{ hashFiles('.yalc/**') }}
      - name: Install node_modules
        if: steps.modules-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Bundle install, fastlane dependencies
        run: bundle install
      - name: Set environment
        run: sh ./scripts/override-environment.sh $APP_ENVIRONMENT ${{ matrix.org }}
      - name: Export workflow env variables based on environment
        run: sh ./scripts/export-workflow-parameters.sh
      - name: Override native config files
        run: sh ./scripts/override-config-files.sh
      - name: Get potential cached APK
        uses: actions/cache@v2
        id: apk-cache
        with:
          path: ${{ $APK_FILE_NAME }}
          key: ${{ runner.os }}-android-cache-${{ hashFiles('android/**') }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/patches/**.patch') }}-${{ hashFiles('.yalc/**') }}
      - name: Decode Android keystore
        run: sh ./scripts/android/create-keystore-file.sh
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
      - name: Generate native assets
        if: steps.apk-cache.outputs.cache-hit != 'true'
        run: brew install imagemagick && yarn generate-native-assets
      - name: Run fastlane build
        if: steps.apk-cache.outputs.cache-hit != 'true'
        run: fastlane android build
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
      - name: Replace apk bundle
        if: steps.apk-cache.outputs.cache-hit == 'true'
        run: sh ./scripts/android/replace-bundle.sh
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
      - name: Distribute to AppCenter
        if: matrix.org == 'atb'
        run: fastlane android appcenter_staging
        env:
          APPCENTER_API_KEY: ${{ secrets.APPCENTER_ANDROID_API_KEY }}
      - name: Distribute to Firebase app distribution
        if: matrix.org == 'nfk'
        run: |
          echo ${{ secrets.FIREBASE_DISTRIBUTION_CREDENTIALS}} | base64 --decode > google-services.json
          fastlane android firebase_distribution_staging
        env:
          GCP_CREDENTIALS_PATH: google-services.json
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      - name: Upload bundle and source maps
        if: matrix.org == 'atb'
        run: sh ./scripts/android/upload-sourcemaps.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - name: Register app version
        if: matrix.org == 'atb'
        run: sh ./scripts/android/register-app-version.sh
        env:
          ENTUR_CLIENT_ID: ${{ secrets.ATB_ENTUR_CLIENT_ID_STAGING}}
          ENTUR_CLIENT_SECRET: ${{ secrets.ATB_ENTUR_CLIENT_SECRET_STAGING}}
