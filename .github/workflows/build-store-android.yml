name: Build store Android project
on:
  release:
    types: [published]

jobs:
  build-android:
    name: Build Android
    strategy:
      fail-fast: false
      matrix:
        org: [atb, nfk]
    environment: ${{ matrix.org }}
    timeout-minutes: 90
    runs-on: macos-11
    steps:
      - name: Check if release tag is org specific and exit for other orgs
        if: ${{ (matrix.org == 'atb' && contains(github.ref, 'nfk')) || (matrix.org == 'nfk' && contains(github.ref, 'atb')) }}
        run: exit 1
      - name: Checkout project
        uses: actions/checkout@v1
      - name: Set global env vars
        run: |
          echo "BUILD_ID=$(date +%s)" >> $GITHUB_ENV
          echo "APP_ENVIRONMENT=store" >> $GITHUB_ENV
          echo "KEYSTORE_PATH=./android/app/keystore.jks" >> $GITHUB_ENV
          echo "APK_FILE_NAME=app-store.apk" >> $GITHUB_ENV
          echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
      - name: Decrypt env files
        run: sh ./scripts/git-crypt-unlock.sh
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      - name: Add Entur private registry credentials
        run: sh ./scripts/add-entur-private-registry.sh
        env:
          ENTUR_REGISTRY_USER: ${{ secrets.ENTUR_REGISTRY_USER }}
          ENTUR_REGISTRY_TOKEN: ${{ secrets.ENTUR_REGISTRY_TOKEN }}
      - name: install node v16
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install node_modules
        run: yarn install
      - name: Bundle install, fastlane dependencies
        run: bundle install
      - name: Get Github-release data
        if: matrix.org == 'atb'
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set environment
        run: sh ./scripts/override-environment.sh $APP_ENVIRONMENT ${{ matrix.org }}
      - name: Export workflow env variables based on environment
        run: sh ./scripts/export-workflow-parameters.sh
      - name: Override native config files
        run: sh ./scripts/override-config-files.sh
      - name: Decode Android keystore
        run: sh ./scripts/android/create-keystore-file.sh
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
      - name: Generate native assets
        run: brew install imagemagick && yarn generate-native-assets
      - name: Add Entur registry properties for gradle
        if: steps.apk-cache.outputs.cache-hit != 'true'
        run: |
          GRADLE_DIRECTORY="$HOME/.gradle"
          if [[ ! -e $GRADLE_DIRECTORY ]]; then
              mkdir $GRADLE_DIRECTORY
          fi
          GRADLE_PROPERTIES="$GRADLE_DIRECTORY/gradle.properties"
          echo "Adding Entur registry properties to $GRADLE_PROPERTIES"

          echo "entur_artifactory_user=$ENTUR_REGISTRY_USER" > $GRADLE_PROPERTIES
          echo "entur_artifactory_password=$ENTUR_REGISTRY_PASSWORD" >> $GRADLE_PROPERTIES

          echo "entur_artifactory_partner_resolve_snapshot_url=https://entur2.jfrog.io/entur2/partner-snapshot" >> $GRADLE_PROPERTIES
          echo "entur_artifactory_partner_resolve_release_url=https://entur2.jfrog.io/entur2/partner-release" >> $GRADLE_PROPERTIES
        env:
          ENTUR_REGISTRY_USER: ${{ secrets.ENTUR_REGISTRY_USER }}
          ENTUR_REGISTRY_PASSWORD: ${{ secrets.ENTUR_REGISTRY_PASSWORD }}
      - name: Run fastlane build
        run: fastlane android build
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
      - name: Distribute to Google Alpha
        if: matrix.org == 'atb'
        run: fastlane android appcenter_alpha
        env:
          APPCENTER_API_KEY: ${{ secrets.APPCENTER_ANDROID_API_KEY }}
          RELEASE_NOTES: ${{ steps.get_release.outputs.body }}
          RELEASE_URL: ${{ steps.get_release.outputs.html_url }}
      - name: Distrubute to Google Play Internal Testing
        if: matrix.org == 'nfk'
        run: |
          echo ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT}} | base64 --decode > google-play-service-account.json
          fastlane android playstore_internal
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_PATH: google-play-service-account.json
          ANDROID_PACKAGE_NAME: ${{ env.ANDROID_APPLICATION_ID }}
      - name: Upload bundle and source maps
        if: matrix.org == 'atb'
        run: sh ./scripts/android/upload-sourcemaps.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - name: Register app version
        if: matrix.org == 'atb'
        run: sh ./scripts/android/register-app-version.sh
        env:
          ENTUR_CLIENT_ID: ${{ secrets.ABT_ENTUR_CLIENT_ID_PRODUCTION}}
          ENTUR_CLIENT_SECRET: ${{ secrets.ABT_ENTUR_CLIENT_SECRET_PRODUCTION}}
