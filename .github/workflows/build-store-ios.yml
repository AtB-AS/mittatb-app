name: Build staging iOS project
on:
  push:
    branches:
      - master

jobs:
  build-ios:
    name: Build iOS
    timeout-minutes: 90
    runs-on: macos-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v1
      - name: Set global env vars
        run: |
          echo "BUILD_ID=$(date +%s)" >> $GITHUB_ENV
          echo "APP_ENVIRONMENT=store" >> $GITHUB_ENV
      - name: Decrypt env files
        run: sh ./scripts/git-crypt-unlock.sh
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      - name: install node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install node_modules
        run: yarn install
      - name: Bundle Install
        run: bundle install
      - name: Set environment
        run: sh ./scripts/override-environment.sh $APP_ENVIRONMENT
      - name: Override native config files
        run: sh ./scripts/override-config-files.sh
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}
      - name: Run fastlane cert match
        run: fastlane ios get_cert
        env:
          FASTLANE_MATCH_URL: ${{ secrets.FASTLANE_MATCH_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      - name: Generate icons
        run: brew install imagemagick && yarn app-icon generate -i icon.qa.png --platforms=ios
      - name: Run fastlane build
        run: fastlane ios build
      - name: Distribute to AppCenter
        run: fastlane ios appcenter
        env:
          APPCENTER_API_KEY: ${{ secrets.APPCENTER_IOS_API_KEY }}
      - name: Create bundle and source maps
        run: sh ./scripts/ios/create-sourcemaps.sh
      - name: Upload bundle and source maps
        run: sh ./scripts/ios/upload-sourcemaps.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - name: Upload dSYMs
        run: sh ./scripts/ios/upload-dsyms.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
