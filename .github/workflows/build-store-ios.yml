name: Build store iOS project
on:
  release:
    types: [published]

jobs:
  build-ios:
    name: Build iOS
    strategy:
      matrix:
        org: [atb, nfk]
    environment: ${{ matrix.org }}
    timeout-minutes: 90
    runs-on: macos-11
    steps:
      - name: Checkout project
        uses: actions/checkout@v1
      - name: Set global env vars
        run: |
          echo "BUILD_ID=$(date +%s)" >> $GITHUB_ENV
          echo "APP_ENVIRONMENT=store" >> $GITHUB_ENV
          echo "APP_ORG=atb" >> $GITHUB_ENV
      - name: Decrypt env files
        run: sh ./scripts/git-crypt-unlock.sh
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      - name: install node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install node_modules
        run: yarn install
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.3.0
        with:
          xcode-version: "13.0"
      - name: Bundle Install
        run: bundle install
      - name: Get Github-release data
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set environment
        run: sh ./scripts/override-environment.sh $APP_ENVIRONMENT ${{ matrix.org }}
      - name: Export workflow env variables based on environment
        run: sh ./scripts/export-workflow-parameters.sh
      - name: Override native config files
        run: sh ./scripts/override-config-files.sh
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}
      - name: Run fastlane cert match
        run: fastlane ios get_cert
        env:
          FASTLANE_MATCH_URL: ${{ secrets.FASTLANE_MATCH_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_TYPE: "appstore"
      - name: Generate native assets
        run: brew install imagemagick && yarn generate-native-assets
      - name: Run fastlane build
        run: fastlane ios build
        env:
          PROVISIONING_PROFILE: $IOS_PROVISIONING_PROFILE_SPECIFIER
          EXPORT_METHOD: "app-store"
      - name: Distribute to TestFlight via appcenter
        if: matrix.org == 'atb'
        run: fastlane ios appcenter_testflight
        env:
          APPCENTER_API_KEY: ${{ secrets.APPCENTER_IOS_API_KEY }}
          RELEASE_NOTES: ${{ steps.get_release.outputs.body }}
          RELEASE_URL: ${{ steps.get_release.outputs.html_url }}
      - name: Create bundle and source maps
        if: matrix.org == 'atb'
        run: sh ./scripts/ios/create-sourcemaps.sh
      - name: Upload bundle and source maps
        if: matrix.org == 'atb'
        run: sh ./scripts/ios/upload-sourcemaps.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - name: Upload dSYMs
        if: matrix.org == 'atb'
        run: sh ./scripts/ios/upload-dsyms.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - name: Register app version
        if: matrix.org == 'atb'
        run: sh ./scripts/ios/register-app-version.sh
        env:
          ENTUR_CLIENT_ID: ${{ secrets.ATB_ENTUR_CLIENT_ID_PRODUCTION}}
          ENTUR_CLIENT_SECRET: ${{ secrets.ATB_ENTUR_CLIENT_SECRET_PRODUCTION}}
