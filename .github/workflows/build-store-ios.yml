name: Build store iOS project
on:
  release:
    types: [published]

jobs:
  build-ios:
    name: Build iOS
    strategy:
      fail-fast: false
      matrix:
        org: [atb, nfk]
    environment: ${{ matrix.org }}
    timeout-minutes: 360
    runs-on: macOS-12
    steps:
      - name: Check if release tag is org specific and exit for other orgs
        if: ${{ (matrix.org == 'atb' && contains(github.ref, 'nfk')) || (matrix.org == 'nfk' && contains(github.ref, 'atb')) }}
        run: exit 1
      - name: Checkout project
        uses: actions/checkout@v1
      - name: Add Entur private registry credentials
        run: sh ./scripts/add-entur-private-registry.sh
        env:
          ENTUR_REGISTRY_USER: ${{ secrets.ENTUR_REGISTRY_USER }}
          ENTUR_REGISTRY_TOKEN: ${{ secrets.ENTUR_REGISTRY_TOKEN }}
      - name: Setup build dependencies, environment and assets
        uses: ./.github/actions/ios-build-setup
        with:
          use-build-cache: 'false'
          app-environment: 'store'
          app-org: ${{ matrix.org }}
          git-crypt-key: ${{ secrets.GIT_CRYPT_KEY }}
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}
      - name: Run fastlane cert match
        run: fastlane ios get_cert
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      - name: Generate native assets
        run: brew install imagemagick && yarn generate-native-assets
      - name: Run fastlane build
        run: fastlane ios build
        env:
          # A workaround for Github Actions which breaks for a timeout in some cases, 
          # so this sets a higher value for TIMEOUT and reduces the number of retries
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 180
          FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 1
          PROVISIONING_PROFILE: $IOS_PROVISIONING_PROFILE_SPECIFIER
          EXPORT_METHOD: 'app-store'
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Get Github-release data
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Distribute to TestFlight
        run: |
          echo ${{ secrets.APP_STORE_CONNECT_API_KEY}} | base64 --decode > app-store-connect-api-key.json
          fastlane ios testflight_prod
        env:
          APPCONNECT_API_KEY_PATH: app-store-connect-api-key.json
      - name: Create bundle and source maps
        run: sh ./scripts/ios/create-sourcemaps.sh
      - name: Upload bundle and source maps
        run: sh ./scripts/ios/upload-sourcemaps.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - name: Upload dSYMs
        run: sh ./scripts/ios/upload-dsyms.sh
        env:
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
      - name: Register app version
        if: matrix.org == 'atb'
        run: sh ./scripts/ios/register-app-version.sh
        env:
          ENTUR_CLIENT_ID: ${{ secrets.ATB_ENTUR_CLIENT_ID_PRODUCTION}}
          ENTUR_CLIENT_SECRET: ${{ secrets.ATB_ENTUR_CLIENT_SECRET_PRODUCTION}}
