name: Renew certificates
on:
  workflow_dispatch:
    inputs:
      org:
        description: 'Org'
        required: true
        type: choice
        options:
          - atb
          - fram
          - nfk
          - troms
jobs:
  nuke-certificates:
    name: Nuke certificates
    environment: ${{ inputs.org }}
    timeout-minutes: 180
    runs-on: macOS-13
    strategy:
      matrix:
        environment: [ development, adhoc, appstore ]
      fail-fast: true
      max-parallel: 1
    env:
      KEYCHAIN_NAME: "CI"
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Setup dependencies, environment and assets
        uses: ./.github/actions/setup-certs
        with:
          app-environment: ${{ matrix.environment }}
          app-org: ${{ inputs.org }}
          git-crypt-key: ${{ secrets.GIT_CRYPT_KEY }}
      - name: Run fastlane nuke
        run: |
          echo ${{ secrets.APP_STORE_CONNECT_API_KEY }} | base64 --decode > app-store-connect-api-key.json
          bundle exec fastlane ios nuke_certificates
        env:
          APPCONNECT_API_KEY_PATH: app-store-connect-api-key.json
          FASTLANE_MATCH_TYPE: ${{ matrix.environment }}
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

  get-certs:
    name: Regenerate & Get new certs
    environment: ${{ inputs.org }}
    timeout-minutes: 180
    needs: nuke-certificates
    runs-on: macOS-13
    strategy:
      matrix:
        environment: [ development, adhoc, appstore ]
      fail-fast: true
      max-parallel: 1
    env:
      KEYCHAIN_NAME: "CI"
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Setup dependencies, environment and assets
        uses: ./.github/actions/setup-certs
        with:
          app-environment: ${{ matrix.environment }}
          app-org: ${{ inputs.org }}
          git-crypt-key: ${{ secrets.GIT_CRYPT_KEY }}
      - name: Run fastlane generate certificates
        run: |
          echo ${{ secrets.APP_STORE_CONNECT_API_KEY }} | base64 --decode > app-store-connect-api-key.json
          bundle exec fastlane ios generate_new_certs
        env:
          APPCONNECT_API_KEY_PATH: app-store-connect-api-key.json
          FASTLANE_MATCH_TYPE: ${{ matrix.environment }}
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          KEYCHAIN_NAME: ${{ env.KEYCHAIN_NAME }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}