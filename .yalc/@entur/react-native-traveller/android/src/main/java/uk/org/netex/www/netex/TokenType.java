// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: uk/org/netex/www/netex/uk_org_netex_www_netex.proto

package uk.org.netex.www.netex;

/**
 * Protobuf enum {@code uk.org.netex.www.netex.TokenType}
 */
public enum TokenType
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>TOKEN_TYPE_UNSPECIFIED = 0;</code>
   */
  TOKEN_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * Token type used on a mobile phone screen (QR code)
   * </pre>
   *
   * <code>TOKEN_TYPE_QR_SMARTPHONE = 1;</code>
   */
  TOKEN_TYPE_QR_SMARTPHONE(1),
  /**
   * <pre>
   * Token type used on paper (QR code)
   * </pre>
   *
   * <code>TOKEN_TYPE_QR_PAPER = 2;</code>
   */
  TOKEN_TYPE_QR_PAPER(2),
  /**
   * <pre>
   * Token type for national travel cards
   * </pre>
   *
   * <code>TOKEN_TYPE_TRAVELCARD = 3;</code>
   */
  TOKEN_TYPE_TRAVELCARD(3),
  /**
   * <pre>
   * Token type for reference codes (9 letters OCR friendly)
   * </pre>
   *
   * <code>TOKEN_TYPE_REFERENCE_CODE = 4;</code>
   */
  TOKEN_TYPE_REFERENCE_CODE(4),
  /**
   * <pre>
   * Token type for unsigned simple tokens (testing purposes)
   * </pre>
   *
   * <code>TOKEN_TYPE_PLAIN_UNSIGNED = 5;</code>
   */
  TOKEN_TYPE_PLAIN_UNSIGNED(5),
  /**
   * <pre>
   * External token type (meaning a local token provided by a PTO)
   * </pre>
   *
   * <code>TOKEN_TYPE_EXTERNAL = 6;</code>
   */
  TOKEN_TYPE_EXTERNAL(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>TOKEN_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int TOKEN_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Token type used on a mobile phone screen (QR code)
   * </pre>
   *
   * <code>TOKEN_TYPE_QR_SMARTPHONE = 1;</code>
   */
  public static final int TOKEN_TYPE_QR_SMARTPHONE_VALUE = 1;
  /**
   * <pre>
   * Token type used on paper (QR code)
   * </pre>
   *
   * <code>TOKEN_TYPE_QR_PAPER = 2;</code>
   */
  public static final int TOKEN_TYPE_QR_PAPER_VALUE = 2;
  /**
   * <pre>
   * Token type for national travel cards
   * </pre>
   *
   * <code>TOKEN_TYPE_TRAVELCARD = 3;</code>
   */
  public static final int TOKEN_TYPE_TRAVELCARD_VALUE = 3;
  /**
   * <pre>
   * Token type for reference codes (9 letters OCR friendly)
   * </pre>
   *
   * <code>TOKEN_TYPE_REFERENCE_CODE = 4;</code>
   */
  public static final int TOKEN_TYPE_REFERENCE_CODE_VALUE = 4;
  /**
   * <pre>
   * Token type for unsigned simple tokens (testing purposes)
   * </pre>
   *
   * <code>TOKEN_TYPE_PLAIN_UNSIGNED = 5;</code>
   */
  public static final int TOKEN_TYPE_PLAIN_UNSIGNED_VALUE = 5;
  /**
   * <pre>
   * External token type (meaning a local token provided by a PTO)
   * </pre>
   *
   * <code>TOKEN_TYPE_EXTERNAL = 6;</code>
   */
  public static final int TOKEN_TYPE_EXTERNAL_VALUE = 6;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TokenType valueOf(int value) {
    return forNumber(value);
  }

  public static TokenType forNumber(int value) {
    switch (value) {
      case 0: return TOKEN_TYPE_UNSPECIFIED;
      case 1: return TOKEN_TYPE_QR_SMARTPHONE;
      case 2: return TOKEN_TYPE_QR_PAPER;
      case 3: return TOKEN_TYPE_TRAVELCARD;
      case 4: return TOKEN_TYPE_REFERENCE_CODE;
      case 5: return TOKEN_TYPE_PLAIN_UNSIGNED;
      case 6: return TOKEN_TYPE_EXTERNAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TokenType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TokenType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TokenType>() {
          @java.lang.Override
          public TokenType findValueByNumber(int number) {
            return TokenType.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return TokenTypeVerifier.INSTANCE;
  }

  private static final class TokenTypeVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TokenTypeVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return TokenType.forNumber(number) != null;
          }
        };

  private final int value;

  private TokenType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:uk.org.netex.www.netex.TokenType)
}

