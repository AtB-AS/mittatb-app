{"version":3,"sources":["internal-fetcher.ts"],"names":["internalFetcher","request","url","method","headers","response","fetch","body","JSON","stringify","undefined","status","responseHeaders","header","data","json"],"mappings":";;;;;;;AAEA,MAAMA,eAAsB,GAAG,OAC7BC,OAD6B,KAED;AAC5B,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA;AAAf,MAA2BH,OAAjC;AACA,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AAChCC,IAAAA,MADgC;AAEhCC,IAAAA,OAFgC;AAGhCG,IAAAA,IAAI,EAAEN,OAAO,CAACM,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeR,OAAO,CAACM,IAAvB,CAAf,GAA8CG;AAHpB,GAAN,CAA5B;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAaN,QAAnB;AAEA,QAAMO,eAAuC,GAAG,EAAhD;;AACA,OAAK,IAAIC,MAAT,IAAmBR,QAAQ,CAACD,OAA5B,EAA4C;AAC1CQ,IAAAA,eAAe,CAACC,MAAM,CAAC,CAAD,CAAP,CAAf,GAA6BA,MAAM,CAAC,CAAD,CAAnC;AACD;;AAED,QAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;AAEA,SAAO;AACLR,IAAAA,IAAI,EAAEO,IADD;AAELH,IAAAA,MAFK;AAGLP,IAAAA,OAAO,EAAEQ;AAHJ,GAAP;AAKD,CAxBD;;eA0BeZ,e","sourcesContent":["import type { ApiRequest, ApiResponse, Fetch } from '../config/types';\n\nconst internalFetcher: Fetch = async <T>(\n  request: ApiRequest\n): Promise<ApiResponse<T>> => {\n  const { url, method, headers } = request;\n  const response = await fetch(url, {\n    method,\n    headers,\n    body: request.body ? JSON.stringify(request.body) : undefined,\n  });\n\n  const { status } = response;\n\n  const responseHeaders: Record<string, string> = {};\n  for (let header of response.headers as any) {\n    responseHeaders[header[0]] = header[1];\n  }\n\n  const data = await response.json();\n\n  return {\n    body: data,\n    status,\n    headers: responseHeaders,\n  };\n};\n\nexport default internalFetcher;\n"]}