{"version":3,"sources":["index.ts"],"names":["DEFAULT_CONFIG","hosts","pto","fetch","extraHeaders","getConfigFromInitialConfig","initialConfig"],"mappings":";;;;;;;;;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;;;AAEA,MAAMA,cAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE;AADA,GADsB;AAI7BC,EAAAA,KAAK,EAALA,wBAJ6B;AAK7BC,EAAAA,YAAY,EAAE;AALe,CAA/B;;AAQO,SAASC,0BAAT,CACLC,aADK,EAEG;AACR,MAAI,CAACA,aAAL,EAAoB,OAAON,cAAP;AAEpB,SAAO,EACL,GAAGA,cADE;AAEL,OAAGM,aAFE;AAGLL,IAAAA,KAAK,EAAE,EACL,GAAGD,cAAc,CAACC,KADb;AAEL,SAAGK,aAAa,CAACL;AAFZ,KAHF;AAOLG,IAAAA,YAAY,EAAE,EACZ,GAAGJ,cAAc,CAACI,YADN;AAEZ,SAAGE,aAAa,CAACF;AAFL;AAPT,GAAP;AAYD","sourcesContent":["import type { Config } from './types';\nexport * from './types';\nimport fetch from '../api/internal-fetcher';\n\nconst DEFAULT_CONFIG: Config = {\n  hosts: {\n    pto: '',\n  },\n  fetch,\n  extraHeaders: {},\n};\n\nexport function getConfigFromInitialConfig(\n  initialConfig?: Partial<Config>\n): Config {\n  if (!initialConfig) return DEFAULT_CONFIG;\n\n  return {\n    ...DEFAULT_CONFIG,\n    ...initialConfig,\n    hosts: {\n      ...DEFAULT_CONFIG.hosts,\n      ...initialConfig.hosts,\n    },\n    extraHeaders: {\n      ...DEFAULT_CONFIG.extraHeaders,\n      ...initialConfig.extraHeaders,\n    },\n  };\n}\n"]}