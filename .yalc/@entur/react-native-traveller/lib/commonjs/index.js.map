{"version":3,"sources":["index.ts"],"names":["onStartup","fetcher","hosts","token","createClient","initialConfig","config","initToken","getToken","deleteToken","generateQrCode"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;AACA;;AACA;;AAOA,eAAeA,SAAf,CAAyBC,OAAzB,EAAyCC,KAAzC,EAAuD;AACrD,QAAMC,KAAK,GAAG,MAAM,uBAApB;;AAEA,MAAIA,KAAK,IAAI,CAAC,yBAAaA,KAAb,CAAd,EAAmC;AACjC,iCAAiBF,OAAjB,EAA0BC,KAA1B,EAAiCC,KAAjC;AACD;AACF;;AAEc,SAASC,YAAT,CAAsBC,aAAtB,EAAqD;AAClE,QAAMC,MAAM,GAAG,wCAA2BD,aAA3B,CAAf;AACA,QAAMJ,OAAO,GAAG,4BAAcK,MAAd,CAAhB;AAEAN,EAAAA,SAAS,CAACC,OAAD,EAAUK,MAAM,CAACJ,KAAjB,CAAT;AAEA,SAAO;AACLK,IAAAA,SAAS,EAAE,4BAAgBN,OAAhB,EAAyBK,MAAM,CAACJ,KAAhC,CADN;AAELM,IAAAA,QAAQ,EAARA,gBAFK;AAGLC,IAAAA,WAAW,EAAXA,mBAHK;AAILC,IAAAA,cAAc,EAAdA;AAJK,GAAP;AAMD","sourcesContent":["import {\n  getConfigFromInitialConfig,\n  Fetch,\n  InitialConfig,\n  Hosts,\n} from './config';\nimport { getToken, deleteToken, generateQrCode } from './native';\nimport { createInitToken, createRenewToken, isTokenValid } from './token';\nimport { createFetcher } from './fetcher';\n\nexport type { Token } from './native/types';\nexport { isTokenValid } from './token';\nexport { RequestError } from './fetcher';\nexport type { Fetch, ApiResponse, ApiRequest } from './config';\n\nasync function onStartup(fetcher: Fetch, hosts: Hosts) {\n  const token = await getToken();\n\n  if (token && !isTokenValid(token)) {\n    createRenewToken(fetcher, hosts)(token);\n  }\n}\n\nexport default function createClient(initialConfig?: InitialConfig) {\n  const config = getConfigFromInitialConfig(initialConfig);\n  const fetcher = createFetcher(config);\n\n  onStartup(fetcher, config.hosts);\n\n  return {\n    initToken: createInitToken(fetcher, config.hosts),\n    getToken,\n    deleteToken,\n    generateQrCode,\n  };\n}\n"]}