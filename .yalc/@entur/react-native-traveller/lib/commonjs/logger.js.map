{"version":3,"sources":["logger.ts"],"names":["defaultInfoLogger","ctx","err","md","console","log","defaultErrorLogger","error","logger","info","setupLogger","infoLogger","errorLogger"],"mappings":";;;;;;;AAWA,MAAMA,iBAA8B,GAAG,CACrCC,GADqC,EAErCC,GAFqC,EAGrCC,EAHqC,KAIlC;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAAiBC,GAAjB,EAAsBC,EAAtB;AACD,CAND;;AAQA,MAAMG,kBAA+B,GAAG,CACtCL,GADsC,EAEtCC,GAFsC,EAGtCC,EAHsC,KAInC;AACHC,EAAAA,OAAO,CAACG,KAAR,CAAcN,GAAd,EAAmBC,GAAnB,EAAwBC,EAAxB;AACD,CAND;;AAQO,MAAMK,MAAc,GAAG;AAC5BC,EAAAA,IAAI,EAAET,iBADsB;AAE5BO,EAAAA,KAAK,EAAED;AAFqB,CAAvB;;;AAUA,MAAMI,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA8C;AACvE,MAAID,UAAJ,EAAgBH,MAAM,CAACC,IAAP,GAAcE,UAAd;AAChB,MAAIC,WAAJ,EAAiBJ,MAAM,CAACD,KAAP,GAAeK,WAAf;AAClB,CAHM","sourcesContent":["export type LogCallback = (\n  context?: string,\n  error?: Error,\n  metadata?: Record<string, string>\n) => void;\n\nexport type Logger = {\n  info: LogCallback;\n  error: LogCallback;\n};\n\nconst defaultInfoLogger: LogCallback = (\n  ctx?: string,\n  err?: Error,\n  md?: Record<string, string>\n) => {\n  console.log(ctx, err, md);\n};\n\nconst defaultErrorLogger: LogCallback = (\n  ctx?: string,\n  err?: Error,\n  md?: Record<string, string>\n) => {\n  console.error(ctx, err, md);\n};\n\nexport const logger: Logger = {\n  info: defaultInfoLogger,\n  error: defaultErrorLogger,\n};\n\ntype LoggerProps = {\n  infoLogger?: LogCallback;\n  errorLogger?: LogCallback;\n};\n\nexport const setupLogger = ({ infoLogger, errorLogger }: LoggerProps) => {\n  if (infoLogger) logger.info = infoLogger;\n  if (errorLogger) logger.error = errorLogger;\n};\n"]}