{"version":3,"sources":["index.ts"],"names":["start","attest","attestLegacy","addToken","getToken","deleteToken","getSecureToken","getAttestationSupport","NativeModules","EnturTraveller"],"mappings":";;;;;;;AAAA;;AAoCO,MAAM;AACXA,EAAAA,KADW;AAEXC,EAAAA,MAFW;AAGXC,EAAAA,YAHW;AAIXC,EAAAA,QAJW;AAKXC,EAAAA,QALW;AAMXC,EAAAA,WANW;AAOXC,EAAAA,cAPW;AAQXC,EAAAA;AARW,IASWC,2BAAcC,cAT/B","sourcesContent":["import { NativeModules } from 'react-native';\nimport type {\n  AttestationData,\n  AttestationSupport,\n  LegacyAttestationData,\n  PayloadAction,\n  Token,\n} from './types';\n\nexport type EnturTravellerType = {\n  start(safetyNetApiKey?: string): Promise<AttestationData>;\n  getAttestationSupport(): Promise<AttestationSupport>;\n  attest(\n    accountId: string,\n    tokenId: string,\n    nonce: string\n  ): Promise<AttestationData>;\n  attestLegacy(\n    accountId: string,\n    tokenId: string,\n    nonce: string,\n    serverPublicKey: string\n  ): Promise<LegacyAttestationData>;\n  addToken(\n    accountId: string,\n    tokenId: string,\n    certificate: string,\n    tokenValidityStart: number,\n    tokenValidityEnd: number,\n    nonce?: string\n  ): Promise<void>;\n  getToken(accountId: string): Promise<Token | undefined>;\n  deleteToken(accountId: string): Promise<void>;\n  getSecureToken(accountId: string, actions: PayloadAction[]): Promise<string>;\n};\n\nexport const {\n  start,\n  attest,\n  attestLegacy,\n  addToken,\n  getToken,\n  deleteToken,\n  getSecureToken,\n  getAttestationSupport,\n}: EnturTravellerType = NativeModules.EnturTraveller;\n"]}