{"version":3,"sources":["abt-tokens-service.ts"],"names":["createAbtTokensService","fetcher","hosts","listTokens","url","pto","response","method","body","initToken","renewToken","activateToken","tokenId"],"mappings":";;;;;;;AAqBO,MAAMA,sBAAsB,GAAG,CACpCC,OADoC,EAEpCC,KAFoC,KAGf;AACrB,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAI,GAAEF,KAAK,CAACG,GAAI,SAAzB;AACA,UAAMC,QAAQ,GAAG,MAAML,OAAO,CAAqB;AACjDG,MAAAA,GADiD;AAEjDG,MAAAA,MAAM,EAAE;AAFyC,KAArB,CAA9B;AAIA,WAAOD,QAAQ,CAACE,IAAhB;AACD,GAPD;;AASA,QAAMC,SAAS,GAAG,MAAOD,IAAP,IAAwC;AACxD,UAAMJ,GAAG,GAAI,GAAEF,KAAK,CAACG,GAAI,SAAzB;AACA,UAAMC,QAAQ,GAAG,MAAML,OAAO,CAA0B;AACtDG,MAAAA,GADsD;AAEtDI,MAAAA,IAFsD;AAGtDD,MAAAA,MAAM,EAAE;AAH8C,KAA1B,CAA9B;AAKA,WAAOD,QAAQ,CAACE,IAAhB;AACD,GARD;;AAUA,QAAME,UAAU,GAAG,MAAOF,IAAP,IAAmC;AACpD,UAAMJ,GAAG,GAAI,GAAEF,KAAK,CAACG,GAAI,eAAzB;AACA,UAAMC,QAAQ,GAAG,MAAML,OAAO,CAAqB;AACjDG,MAAAA,GADiD;AAEjDI,MAAAA,IAFiD;AAGjDD,MAAAA,MAAM,EAAE;AAHyC,KAArB,CAA9B;AAKA,WAAOD,QAAQ,CAACE,IAAhB;AACD,GARD;;AAUA,QAAMG,aAAa,GAAG,OAAOC,OAAP,EAAwBJ,IAAxB,KAAuD;AAC3E,UAAMJ,GAAG,GAAI,GAAEF,KAAK,CAACG,GAAI,WAAUO,OAAQ,WAA3C;AACA,UAAMN,QAAQ,GAAG,MAAML,OAAO,CAAwB;AACpDG,MAAAA,GADoD;AAEpDI,MAAAA,IAFoD;AAGpDD,MAAAA,MAAM,EAAE;AAH4C,KAAxB,CAA9B;AAMA,WAAOD,QAAQ,CAACE,IAAhB;AACD,GATD;;AAWA,SAAO;AACLL,IAAAA,UADK;AAELM,IAAAA,SAFK;AAGLC,IAAAA,UAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CAlDM","sourcesContent":["import type { Fetch, Hosts } from '../config';\nimport type {\n  ActivateTokenRequest,\n  ActivateTokenResponse,\n  InitializeTokenRequest,\n  InitializeTokenResponse,\n  ListTokensResponse,\n  RenewTokenRequest,\n  RenewTokenResponse,\n} from './types';\n\nexport type AbtTokensService = {\n  listTokens: () => Promise<ListTokensResponse>;\n  initToken: (req: InitializeTokenRequest) => Promise<InitializeTokenResponse>;\n  renewToken: (req: RenewTokenRequest) => Promise<RenewTokenResponse>;\n  activateToken: (\n    tokenId: string,\n    req: ActivateTokenRequest\n  ) => Promise<ActivateTokenResponse>;\n};\n\nexport const createAbtTokensService = (\n  fetcher: Fetch,\n  hosts: Hosts\n): AbtTokensService => {\n  const listTokens = async () => {\n    const url = `${hosts.pto}/tokens`;\n    const response = await fetcher<ListTokensResponse>({\n      url,\n      method: 'GET',\n    });\n    return response.body;\n  };\n\n  const initToken = async (body: InitializeTokenRequest) => {\n    const url = `${hosts.pto}/tokens`;\n    const response = await fetcher<InitializeTokenResponse>({\n      url,\n      body,\n      method: 'POST',\n    });\n    return response.body;\n  };\n\n  const renewToken = async (body: RenewTokenRequest) => {\n    const url = `${hosts.pto}/tokens/renew`;\n    const response = await fetcher<RenewTokenResponse>({\n      url,\n      body,\n      method: 'POST',\n    });\n    return response.body;\n  };\n\n  const activateToken = async (tokenId: string, body: ActivateTokenRequest) => {\n    const url = `${hosts.pto}/tokens/${tokenId}/activate`;\n    const response = await fetcher<ActivateTokenResponse>({\n      url,\n      body,\n      method: 'POST',\n    });\n\n    return response.body;\n  };\n\n  return {\n    listTokens,\n    initToken,\n    renewToken,\n    activateToken,\n  };\n};\n"]}