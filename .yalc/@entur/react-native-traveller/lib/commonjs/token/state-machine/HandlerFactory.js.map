{"version":3,"sources":["HandlerFactory.ts"],"names":["stateHandlerFactory","forStates","handlerFunction","storedState","includes","state","error","missingNetConnection","message","err","logger","undefined","missingNet"],"mappings":";;;;;;;AAAA;;AAEA;;AAIO,SAASA,mBAAT,CACLC,SADK,EAELC,eAFK,EAKS;AACd,SAAO,MAAOC,WAAP,IAA0D;AAC/D,QAAI,CAACF,SAAS,CAACG,QAAV,CAAmBD,WAAW,CAACE,KAA/B,CAAL,EAAiD;AAC/C,aAAO,EACL,GAAGF,WADE;AAELG,QAAAA,KAAK,EAAE;AACLC,UAAAA,oBAAoB,EAAE,KADjB;AAELC,UAAAA,OAAO,EAAG,wBAAuBP,SAAU,6BAA4BE,WAAW,CAACE,KAAM;AAFpF;AAFF,OAAP;AAOD;;AAED,QAAI;AACF,aAAO,MAAMH,eAAe,CAACC,WAAD,CAA5B;AACD,KAFD,CAEE,OAAOM,GAAP,EAAiB;AACjBC,qBAAOJ,KAAP,CAAaK,SAAb,EAAwBF,GAAxB,EAA6BE,SAA7B;;AAEA,UAAIC,UAAU,GAAG,KAAjB;;AACA,UAAI;AACFA,QAAAA,UAAU,GAAG,MAAM,kCAAnB;AACD,OAFD,CAEE,MAAM,CAAE;;AAEV,aAAO,EACL,GAAGT,WADE;AAELG,QAAAA,KAAK,EAAE;AACLC,UAAAA,oBAAoB,EAAEK,UADjB;AAELJ,UAAAA,OAAO,EAAG,kCAAiCL,WAAW,CAACE,KAAM,EAFxD;AAGLI,UAAAA;AAHK;AAFF,OAAP;AAQD;AACF,GA9BD;AA+BD","sourcesContent":["import { logger } from '../../logger';\nimport type { StoredState, TokenState } from '../types';\nimport { missingNetConnection } from './utils';\n\nexport type StateHandler = (storedState: StoredState) => Promise<StoredState>;\n\nexport function stateHandlerFactory<S extends TokenState>(\n  forStates: S[],\n  handlerFunction: (\n    storedState: StoredState & { state: S }\n  ) => Promise<StoredState>\n): StateHandler {\n  return async (storedState: StoredState): Promise<StoredState> => {\n    if (!forStates.includes(storedState.state as S)) {\n      return {\n        ...storedState,\n        error: {\n          missingNetConnection: false,\n          message: `Applying handler for ${forStates} when the actual state is ${storedState.state}`,\n        },\n      };\n    }\n\n    try {\n      return await handlerFunction(storedState as StoredState & { state: S });\n    } catch (err: any) {\n      logger.error(undefined, err, undefined);\n\n      let missingNet = false;\n      try {\n        missingNet = await missingNetConnection();\n      } catch {}\n\n      return {\n        ...storedState,\n        error: {\n          missingNetConnection: missingNet,\n          message: `Error during handling of state ${storedState.state}`,\n          err,\n        },\n      };\n    }\n  };\n}\n"]}