{"version":3,"sources":["ActivateRenewalHandler.ts"],"names":["activateRenewalHandler","abtTokensService","s","signedToken","PayloadAction","addRemoveToken","activateTokenResponse","activateToken","tokenId","attestationData","state","activatedData","err","response","status"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEe,SAASA,sBAAT,CACbC,gBADa,EAEC;AACd,SAAO,yCAAoB,CAAC,iBAAD,CAApB,EAAyC,MAAOC,CAAP,IAAa;AAC3D,UAAMC,WAAW,GAAG,MAAM,4BAAe,CAACC,qBAAcC,cAAf,CAAf,CAA1B;;AAEA,QAAI;AACF,YAAMC,qBAAqB,GAAG,MAAML,gBAAgB,CAACM,aAAjB,CAClCL,CAAC,CAACM,OADgC,EAElCN,CAAC,CAACO,eAFgC,EAGlCN,WAHkC,CAApC;AAKA,uCAAqBD,CAAC,CAACM,OAAvB,EAAgCF,qBAAqB,CAACE,OAAtD;AAEA,aAAO;AACLE,QAAAA,KAAK,EAAE,UADF;AAELC,QAAAA,aAAa,EAAEL;AAFV,OAAP;AAID,KAZD,CAYE,OAAOM,GAAP,EAAY;AAAA;;AACZ,UAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,6BAAAA,GAAG,CAAEC,QAAL,gEAAeC,MAAf,MAA0B,GAA9B,EAAmC;AACjC;AACA,eAAO;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAP;AACD;;AACD,YAAME,GAAN;AACD;AACF,GAtBM,CAAP;AAuBD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport { verifyCorrectTokenId } from '../utils';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function activateRenewalHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['ActivateRenewal'], async (s) => {\n    const signedToken = await getSecureToken([PayloadAction.addRemoveToken]);\n\n    try {\n      const activateTokenResponse = await abtTokensService.activateToken(\n        s.tokenId,\n        s.attestationData,\n        signedToken\n      );\n      verifyCorrectTokenId(s.tokenId, activateTokenResponse.tokenId);\n\n      return {\n        state: 'AddToken',\n        activatedData: activateTokenResponse,\n      };\n    } catch (err) {\n      if (err?.response?.status === 409) {\n        // The token has already been renewed. May happen if retrying after timeout.\n        return { state: 'GettingTokenCertificate' };\n      }\n      throw err;\n    }\n  });\n}\n"]}