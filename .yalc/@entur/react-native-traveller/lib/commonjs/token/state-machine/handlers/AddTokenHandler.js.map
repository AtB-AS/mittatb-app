{"version":3,"sources":["AddTokenHandler.ts"],"names":["addTokenHandler","_","s","certificate","tokenId","tokenValidityEnd","tokenValidityStart","activatedData","state"],"mappings":";;;;;;;AAAA;;AAEA;;AAEe,SAASA,eAAT,CAAyBC,CAAzB,EAA4D;AACzE,SAAO,yCAAoB,CAAC,UAAD,CAApB,EAAkC,MAAOC,CAAP,IAAa;AACpD,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFJ,CAAC,CAACK,aALN;AAOA,UAAM,sBAASH,OAAT,EAAkBD,WAAlB,EAA+BG,kBAA/B,EAAmDD,gBAAnD,CAAN;AACA,WAAO;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD,GAVM,CAAP;AAWD","sourcesContent":["import { addToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function addTokenHandler(_: AbtTokensService): StateHandler {\n  return stateHandlerFactory(['AddToken'], async (s) => {\n    const {\n      certificate,\n      tokenId,\n      tokenValidityEnd,\n      tokenValidityStart,\n    } = s.activatedData;\n\n    await addToken(tokenId, certificate, tokenValidityStart, tokenValidityEnd);\n    return { state: 'Valid' };\n  });\n}\n"]}