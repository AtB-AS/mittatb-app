{"version":3,"sources":["AddTokenHandler.ts"],"names":["addTokenHandler","s","certificate","tokenId","tokenValidityEnd","tokenValidityStart","activatedData","accountId","state","isInspectable"],"mappings":";;;;;;;AAAA;;AACA;;AAEe,SAASA,eAAT,GAAyC;AACtD,SAAO,yCAAoB,CAAC,UAAD,CAApB,EAAkC,MAAOC,CAAP,IAAa;AACpD,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFJ,CAAC,CAACK,aALN;AAOA,UAAM,sBACJL,CAAC,CAACM,SADE,EAEJJ,OAFI,EAGJD,WAHI,EAIJG,kBAJI,EAKJD,gBALI,CAAN;AAOA,WAAO;AACLG,MAAAA,SAAS,EAAEN,CAAC,CAACM,SADR;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,aAAa,EAAE;AAHV,KAAP;AAKD,GApBM,CAAP;AAqBD","sourcesContent":["import { addToken } from '../../../native';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function addTokenHandler(): StateHandler {\n  return stateHandlerFactory(['AddToken'], async (s) => {\n    const {\n      certificate,\n      tokenId,\n      tokenValidityEnd,\n      tokenValidityStart,\n    } = s.activatedData;\n\n    await addToken(\n      s.accountId,\n      tokenId,\n      certificate,\n      tokenValidityStart,\n      tokenValidityEnd\n    );\n    return {\n      accountId: s.accountId,\n      state: 'Valid',\n      isInspectable: true,\n    };\n  });\n}\n"]}