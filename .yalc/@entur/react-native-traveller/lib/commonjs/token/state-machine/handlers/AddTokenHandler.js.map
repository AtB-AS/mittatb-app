{"version":3,"sources":["AddTokenHandler.ts"],"names":["addTokenHandler","getClientState","s","certificate","tokenId","tokenValidityEnd","tokenValidityStart","activatedData","accountId","state"],"mappings":";;;;;;;AACA;;AACA;;AAEe,SAASA,eAAT,CACbC,cADa,EAEC;AACd,SAAO,yCAAoB,CAAC,UAAD,CAApB,EAAkC,MAAOC,CAAP,IAAa;AACpD,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFJ,CAAC,CAACK,aALN;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAgBP,cAAc,EAApC;AACA,UAAM,sBACJO,SADI,EAEJJ,OAFI,EAGJD,WAHI,EAIJG,kBAJI,EAKJD,gBALI,CAAN;AAOA,WAAO;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD,GAjBM,CAAP;AAkBD","sourcesContent":["import type { ClientState } from '../../..';\nimport { addToken } from '../../../native';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function addTokenHandler(\n  getClientState: () => Required<ClientState>\n): StateHandler {\n  return stateHandlerFactory(['AddToken'], async (s) => {\n    const {\n      certificate,\n      tokenId,\n      tokenValidityEnd,\n      tokenValidityStart,\n    } = s.activatedData;\n\n    const { accountId } = getClientState();\n    await addToken(\n      accountId,\n      tokenId,\n      certificate,\n      tokenValidityStart,\n      tokenValidityEnd\n    );\n    return { state: 'Valid' };\n  });\n}\n"]}