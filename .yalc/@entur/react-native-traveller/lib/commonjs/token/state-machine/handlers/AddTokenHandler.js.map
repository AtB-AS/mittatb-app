{"version":3,"sources":["AddTokenHandler.ts"],"names":["addTokenHandler","accountId","s","certificate","tokenId","tokenValidityEnd","tokenValidityStart","activatedData","state"],"mappings":";;;;;;;AAAA;;AACA;;AAEe,SAASA,eAAT,CAAyBC,SAAzB,EAA0D;AACvE,SAAO,yCAAoB,CAAC,UAAD,CAApB,EAAkC,MAAOC,CAAP,IAAa;AACpD,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFJ,CAAC,CAACK,aALN;AAOA,UAAM,sBACJN,SADI,EAEJG,OAFI,EAGJD,WAHI,EAIJG,kBAJI,EAKJD,gBALI,CAAN;AAOA,WAAO;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD,GAhBM,CAAP;AAiBD","sourcesContent":["import { addToken } from '../../../native';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function addTokenHandler(accountId: string): StateHandler {\n  return stateHandlerFactory(['AddToken'], async (s) => {\n    const {\n      certificate,\n      tokenId,\n      tokenValidityEnd,\n      tokenValidityStart,\n    } = s.activatedData;\n\n    await addToken(\n      accountId,\n      tokenId,\n      certificate,\n      tokenValidityStart,\n      tokenValidityEnd\n    );\n    return { state: 'Valid' };\n  });\n}\n"]}