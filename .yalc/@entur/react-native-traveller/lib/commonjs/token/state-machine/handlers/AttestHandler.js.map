{"version":3,"sources":["AttestHandler.ts"],"names":["attestHandler","s","initiatedData","tokenId","nonce","attestationEncryptionPublicKey","accountId","state","logger","info","undefined","activateTokenRequestBody","oldTokenId","attestationData"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEe,SAASA,aAAT,GAAuC;AACpD,SAAO,yCAAoB,CAAC,WAAD,EAAc,eAAd,CAApB,EAAoD,MAAOC,CAAP,IAAa;AACtE,UAAM;AACJC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA;AAAlB,OADX;AAEJC,MAAAA,SAFI;AAGJC,MAAAA;AAHI,QAIFN,CAJJ;;AAMAO,mBAAOC,IAAP,CAAY,2BAAZ,EAAyCC,SAAzC,EAAoD;AAClDJ,MAAAA,SADkD;AAElDH,MAAAA,OAFkD;AAGlDI,MAAAA;AAHkD,KAApD;;AAMA,UAAMI,wBAAwB,GAAG,MAAM,yCACrCL,SADqC,EAErCH,OAFqC,EAGrCC,KAHqC,EAIrCC,8BAJqC,CAAvC;;AAOA,QAAIJ,CAAC,CAACM,KAAF,KAAY,WAAhB,EAA6B;AAC3B,aAAO;AACLD,QAAAA,SAAS,EAAEA,SADN;AAELC,QAAAA,KAAK,EAAE,iBAFF;AAGLK,QAAAA,UAAU,EAAEX,CAAC,CAACW,UAHT;AAILT,QAAAA,OAAO,EAAEA,OAJJ;AAKLU,QAAAA,eAAe,EAAEF;AALZ,OAAP;AAOD;;AAED,WAAO;AACLL,MAAAA,SAAS,EAAEA,SADN;AAELC,MAAAA,KAAK,EAAE,aAFF;AAGLJ,MAAAA,OAAO,EAAEA,OAHJ;AAILU,MAAAA,eAAe,EAAEF;AAJZ,KAAP;AAMD,GApCM,CAAP;AAqCD","sourcesContent":["import { logger } from '../../../logger';\nimport { getActivateTokenRequestBody } from '../../attest';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function attestHandler(): StateHandler {\n  return stateHandlerFactory(['AttestNew', 'AttestRenewal'], async (s) => {\n    const {\n      initiatedData: { tokenId, nonce, attestationEncryptionPublicKey },\n      accountId,\n      state,\n    } = s;\n\n    logger.info('mobiletoken_status_change', undefined, {\n      accountId,\n      tokenId,\n      state,\n    });\n\n    const activateTokenRequestBody = await getActivateTokenRequestBody(\n      accountId,\n      tokenId,\n      nonce,\n      attestationEncryptionPublicKey\n    );\n\n    if (s.state !== 'AttestNew') {\n      return {\n        accountId: accountId,\n        state: 'ActivateRenewal',\n        oldTokenId: s.oldTokenId,\n        tokenId: tokenId,\n        attestationData: activateTokenRequestBody,\n      };\n    }\n\n    return {\n      accountId: accountId,\n      state: 'ActivateNew',\n      tokenId: tokenId,\n      attestationData: activateTokenRequestBody,\n    };\n  });\n}\n"]}