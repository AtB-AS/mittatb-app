{"version":3,"sources":["GetTokenCertificateHandler.ts"],"names":["getTokenCertificateHandler","abtTokensService","s","accountId","tokenId","logger","info","undefined","signedToken","PayloadAction","addRemoveToken","tokenCertificateResponse","getTokenCertificate","state","activatedData"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAEe,SAASA,0BAAT,CACbC,gBADa,EAEC;AACd,SAAO,yCAAoB,CAAC,yBAAD,CAApB,EAAiD,MAAOC,CAAP,IAAa;AACnE,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBF,CAA/B;;AACAG,mBAAOC,IAAP,CAAY,gBAAZ,EAA8BC,SAA9B,EAAyC;AAAEJ,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAzC;;AAEA,UAAMI,WAAW,GAAG,MAAM,4BAAeL,SAAf,EAA0BC,OAA1B,EAAmC,KAAnC,EAA0C,CAClEK,qBAAcC,cADoD,CAA1C,CAA1B;AAGA,UAAMC,wBAAwB,GAAG,MAAMV,gBAAgB,CAACW,mBAAjB,CACrCJ,WADqC,CAAvC;AAGA,WAAO;AACLL,MAAAA,SADK;AAELU,MAAAA,KAAK,EAAE,UAFF;AAGLT,MAAAA,OAAO,EAAEF,CAAC,CAACE,OAHN;AAILU,MAAAA,aAAa,EAAEH;AAJV,KAAP;AAMD,GAhBM,CAAP;AAiBD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport { logger } from '../../../logger';\n\nexport default function getTokenCertificateHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['GettingTokenCertificate'], async (s) => {\n    const { accountId, tokenId } = s;\n    logger.info('get_token_cert', undefined, { accountId, tokenId });\n\n    const signedToken = await getSecureToken(accountId, tokenId, false, [\n      PayloadAction.addRemoveToken,\n    ]);\n    const tokenCertificateResponse = await abtTokensService.getTokenCertificate(\n      signedToken\n    );\n    return {\n      accountId,\n      state: 'AddToken',\n      tokenId: s.tokenId,\n      activatedData: tokenCertificateResponse,\n    };\n  });\n}\n"]}