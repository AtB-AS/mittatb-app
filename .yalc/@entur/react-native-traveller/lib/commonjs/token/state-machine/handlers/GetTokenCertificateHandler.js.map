{"version":3,"sources":["GetTokenCertificateHandler.ts"],"names":["getTokenCertificateHandler","abtTokensService","s","signedToken","accountId","tokenId","PayloadAction","addRemoveToken","tokenCertificateResponse","getTokenCertificate","state","activatedData"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEe,SAASA,0BAAT,CACbC,gBADa,EAEC;AACd,SAAO,yCAAoB,CAAC,yBAAD,CAApB,EAAiD,MAAOC,CAAP,IAAa;AACnE,UAAMC,WAAW,GAAG,MAAM,4BAAeD,CAAC,CAACE,SAAjB,EAA4BF,CAAC,CAACG,OAA9B,EAAuC,KAAvC,EAA8C,CACtEC,qBAAcC,cADwD,CAA9C,CAA1B;AAGA,UAAMC,wBAAwB,GAAG,MAAMP,gBAAgB,CAACQ,mBAAjB,CACrCN,WADqC,CAAvC;AAGA,WAAO;AACLC,MAAAA,SAAS,EAAEF,CAAC,CAACE,SADR;AAELM,MAAAA,KAAK,EAAE,UAFF;AAGLL,MAAAA,OAAO,EAAEH,CAAC,CAACG,OAHN;AAILM,MAAAA,aAAa,EAAEH;AAJV,KAAP;AAMD,GAbM,CAAP;AAcD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function getTokenCertificateHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['GettingTokenCertificate'], async (s) => {\n    const signedToken = await getSecureToken(s.accountId, s.tokenId, false, [\n      PayloadAction.addRemoveToken,\n    ]);\n    const tokenCertificateResponse = await abtTokensService.getTokenCertificate(\n      signedToken\n    );\n    return {\n      accountId: s.accountId,\n      state: 'AddToken',\n      tokenId: s.tokenId,\n      activatedData: tokenCertificateResponse,\n    };\n  });\n}\n"]}