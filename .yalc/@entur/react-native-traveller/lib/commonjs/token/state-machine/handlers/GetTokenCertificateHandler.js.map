{"version":3,"sources":["GetTokenCertificateHandler.ts"],"names":["getTokenCertificateHandler","abtTokensService","s","accountId","tokenId","state","logger","info","undefined","signedToken","PayloadAction","addRemoveToken","tokenCertificateResponse","getTokenCertificate","activatedData"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAEe,SAASA,0BAAT,CACbC,gBADa,EAEC;AACd,SAAO,yCAAoB,CAAC,yBAAD,CAApB,EAAiD,MAAOC,CAAP,IAAa;AACnE,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA;AAAtB,QAAgCH,CAAtC;;AACAI,mBAAOC,IAAP,CAAY,2BAAZ,EAAyCC,SAAzC,EAAoD;AAClDH,MAAAA,KADkD;AAElDF,MAAAA,SAFkD;AAGlDC,MAAAA;AAHkD,KAApD;;AAMA,UAAMK,WAAW,GAAG,MAAM,4BAAeN,SAAf,EAA0BC,OAA1B,EAAmC,KAAnC,EAA0C,CAClEM,qBAAcC,cADoD,CAA1C,CAA1B;AAGA,UAAMC,wBAAwB,GAAG,MAAMX,gBAAgB,CAACY,mBAAjB,CACrCJ,WADqC,CAAvC;AAGA,WAAO;AACLN,MAAAA,SADK;AAELE,MAAAA,KAAK,EAAE,UAFF;AAGLD,MAAAA,OAAO,EAAEF,CAAC,CAACE,OAHN;AAILU,MAAAA,aAAa,EAAEF;AAJV,KAAP;AAMD,GApBM,CAAP;AAqBD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport { logger } from '../../../logger';\n\nexport default function getTokenCertificateHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['GettingTokenCertificate'], async (s) => {\n    const { accountId, tokenId, state } = s;\n    logger.info('mobiletoken_status_change', undefined, {\n      state,\n      accountId,\n      tokenId,\n    });\n\n    const signedToken = await getSecureToken(accountId, tokenId, false, [\n      PayloadAction.addRemoveToken,\n    ]);\n    const tokenCertificateResponse = await abtTokensService.getTokenCertificate(\n      signedToken\n    );\n    return {\n      accountId,\n      state: 'AddToken',\n      tokenId: s.tokenId,\n      activatedData: tokenCertificateResponse,\n    };\n  });\n}\n"]}