{"version":3,"sources":["InitiateRenewalHandler.ts"],"names":["initiateRenewalHandler","abtTokensService","signedToken","PayloadAction","addRemoveToken","renewTokenResponse","renewToken","state","initiatedData"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAEe,SAASA,sBAAT,CACbC,gBADa,EAEC;AACd,SAAO,yCAAoB,CAAC,iBAAD,CAApB,EAAyC,YAAY;AAC1D,UAAMC,WAAW,GAAG,MAAM,4BAAe,CAACC,qBAAcC,cAAf,CAAf,CAA1B;AACA,UAAMC,kBAAkB,GAAG,MAAMJ,gBAAgB,CAACK,UAAjB,CAA4BJ,WAA5B,CAAjC;AACA,WAAO;AAAEK,MAAAA,KAAK,EAAE,eAAT;AAA0BC,MAAAA,aAAa,EAAEH;AAAzC,KAAP;AACD,GAJM,CAAP;AAKD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function initiateRenewalHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['InitiateRenewal'], async () => {\n    const signedToken = await getSecureToken([PayloadAction.addRemoveToken]);\n    const renewTokenResponse = await abtTokensService.renewToken(signedToken);\n    return { state: 'AttestRenewal', initiatedData: renewTokenResponse };\n  });\n}\n"]}