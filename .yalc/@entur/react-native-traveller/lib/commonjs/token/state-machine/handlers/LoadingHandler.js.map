{"version":3,"sources":["LoadingHandler.ts"],"names":["secondsIn48Hours","loadingHandler","_","token","state","tokenNeedsRenewal","twentyPercentOfValidityPeriod","tokenValidityEnd","tokenValidityStart","timeLeftWhenRenewalNecessary","Math","min","renewalCutoffTime","nowSeconds","Date","now"],"mappings":";;;;;;;AAAA;;AAEA;;AAGA,MAAMA,gBAAgB,GAAG,KAAK,EAAL,GAAU,EAAnC;;AAEe,SAASC,cAAT,GAAwC;AACrD,SAAO,yCAAoB,CAAC,SAAD,CAApB,EAAiC,MAAOC,CAAP,IAAa;AACnD,UAAMC,KAAK,GAAG,MAAM,uBAApB;;AACA,QAAI,CAACA,KAAL,EAAY;AACV,aAAO;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAP;AACD,KAFD,MAEO;AACL,aAAOC,iBAAiB,CAACF,KAAD,CAAjB,GACH;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADG,GAEH;AAAEA,QAAAA,KAAK,EAAE,YAAT;AAAuBD,QAAAA;AAAvB,OAFJ;AAGD;AACF,GATM,CAAP;AAUD;AAED;AACA;AACA;AACA;AACA;;;AACA,MAAME,iBAAiB,GAAIF,KAAD,IAAkB;AAC1C,QAAMG,6BAA6B,GACjC,CAACH,KAAK,CAACI,gBAAN,GAAyBJ,KAAK,CAACK,kBAAhC,IAAsD,GADxD;AAEA,QAAMC,4BAA4B,GAAGC,IAAI,CAACC,GAAL,CACnCX,gBADmC,EAEnCM,6BAFmC,CAArC;AAIA,QAAMM,iBAAiB,GACrBT,KAAK,CAACI,gBAAN,GAAyBE,4BAD3B;AAEA,QAAMI,UAAU,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAhC;AACA,SAAOF,UAAU,GAAGD,iBAApB;AACD,CAXD","sourcesContent":["import { getToken } from '../../../native';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport type { Token } from '@entur/react-native-traveller';\n\nconst secondsIn48Hours = 48 * 60 * 60;\n\nexport default function loadingHandler(): StateHandler {\n  return stateHandlerFactory(['Loading'], async (_) => {\n    const token = await getToken();\n    if (!token) {\n      return { state: 'InitiateNew' };\n    } else {\n      return tokenNeedsRenewal(token)\n        ? { state: 'InitiateRenewal' }\n        : { state: 'Validating', token };\n    }\n  });\n}\n\n/**\n * Whether the token needs renewal or not. The token needs renewal if the\n * remaining validity period is less than 48 hours and less than 20% of the\n * total validity time.\n */\nconst tokenNeedsRenewal = (token: Token) => {\n  const twentyPercentOfValidityPeriod =\n    (token.tokenValidityEnd - token.tokenValidityStart) * 0.2;\n  const timeLeftWhenRenewalNecessary = Math.min(\n    secondsIn48Hours,\n    twentyPercentOfValidityPeriod\n  );\n  const renewalCutoffTime =\n    token.tokenValidityEnd - timeLeftWhenRenewalNecessary;\n  const nowSeconds = Date.now() / 1000;\n  return nowSeconds > renewalCutoffTime;\n};\n"]}