{"version":3,"sources":["VerifyInspectionActionHandler.ts"],"names":["verifyInspectionActionHandler","abtTokensService","accountId","tokenId","logger","info","undefined","toggleToken","overrideExisting","state"],"mappings":";;;;;;;AAAA;;AAGA;;AAEe,SAASA,6BAAT,CACbC,gBADa,EAEC;AACd,SAAO,yCACL,CAAC,wBAAD,CADK,EAEL,OAAO;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAP,KAAkC;AAChCC,mBAAOC,IAAP,CAAY,0BAAZ,EAAwCC,SAAxC,EAAmD;AACjDJ,MAAAA,SADiD;AAEjDC,MAAAA;AAFiD,KAAnD;;AAIA,UAAMF,gBAAgB,CAACM,WAAjB,CAA6BJ,OAA7B,EAAsC;AAC1CK,MAAAA,gBAAgB,EAAE;AADwB,KAAtC,CAAN;AAIA,WAAO;AACLN,MAAAA,SADK;AAELO,MAAAA,KAAK,EAAE,OAFF;AAGLN,MAAAA;AAHK,KAAP;AAKD,GAhBI,CAAP;AAkBD","sourcesContent":["import { logger } from '../../../logger';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function verifyInspectionActionHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(\n    ['VerifyInspectionAction'],\n    async ({ accountId, tokenId }) => {\n      logger.info('verify_inspection_action', undefined, {\n        accountId,\n        tokenId,\n      });\n      await abtTokensService.toggleToken(tokenId, {\n        overrideExisting: false,\n      });\n\n      return {\n        accountId,\n        state: 'Valid',\n        tokenId,\n      };\n    }\n  );\n}\n"]}