{"version":3,"sources":["VerifyInspectionActionHandler.ts"],"names":["verifyInspectionActionHandler","abtTokensService","accountId","tokenId","tokens","toggleToken","overrideExisting","state","isInspectable"],"mappings":";;;;;;;AAEA;;AACA;;AAEe,SAASA,6BAAT,CACbC,gBADa,EAEC;AACd,SAAO,yCACL,CAAC,wBAAD,CADK,EAEL,OAAO;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAP,KAAkC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMH,gBAAgB,CAACI,WAAjB,CAA6BF,OAA7B,EAAsC;AAC7DG,MAAAA,gBAAgB,EAAE;AAD2C,KAAtC,CAAzB;AAIA,WAAO;AACLJ,MAAAA,SADK;AAELK,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,aAAa,EAAE,+BAAmBJ,MAAnB,EAA2BD,OAA3B;AAHV,KAAP;AAKD,GAZI,CAAP;AAcD","sourcesContent":["import type { AbtTokensService } from '../../abt-tokens-service';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport { isTokenInspectable } from '../utils';\n\nexport default function verifyInspectionActionHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(\n    ['VerifyInspectionAction'],\n    async ({ accountId, tokenId }) => {\n      const { tokens } = await abtTokensService.toggleToken(tokenId, {\n        overrideExisting: false,\n      });\n\n      return {\n        accountId,\n        state: 'Valid',\n        isInspectable: isTokenInspectable(tokens, tokenId),\n      };\n    }\n  );\n}\n"]}