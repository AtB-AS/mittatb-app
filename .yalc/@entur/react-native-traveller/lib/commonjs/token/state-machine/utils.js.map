{"version":3,"sources":["utils.ts"],"names":["verifyCorrectTokenId","initialTokenId","tokenId","Error","STORAGE_KEY_PREFIX","getStoreKey","accountId","missingNetConnection","NetInfo","fetch","then","state","isConnected"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,oBAAoB,GAAG,CAClCC,cADkC,EAElCC,OAFkC,KAG/B;AACH,MAAIA,OAAO,KAAKD,cAAhB,EAAgC;AAC9B,UAAME,KAAK,CACR,mBAAkBD,OAAQ,oCAAmCD,cAAe,EADpE,CAAX;AAGD;AACF,CATM;;;AAWP,MAAMG,kBAAkB,GAAG,uBAA3B;;AACO,MAAMC,WAAW,GAAIC,SAAD,IACxB,GAAEF,kBAAmB,IAAGE,SAAU,EAD9B;;;;AAGA,MAAMC,oBAAoB,GAAG,MAClCC,iBAAQC,KAAR,GAAgBC,IAAhB,CAAsBC,KAAD,IAAW;AAAA;;AAC9B,+BAAO,CAACA,KAAK,CAACC,WAAd,mEAA6B,IAA7B;AACD,CAFD,CADK","sourcesContent":["import NetInfo from '@react-native-community/netinfo';\n\nexport const verifyCorrectTokenId = (\n  initialTokenId: string,\n  tokenId: string\n) => {\n  if (tokenId !== initialTokenId) {\n    throw Error(\n      `Activated token ${tokenId} does not match initial token id ${initialTokenId}`\n    );\n  }\n};\n\nconst STORAGE_KEY_PREFIX = '@mobiletokensdk-state';\nexport const getStoreKey = (accountId: string) =>\n  `${STORAGE_KEY_PREFIX}#${accountId}`;\n\nexport const missingNetConnection = () =>\n  NetInfo.fetch().then((state) => {\n    return !state.isConnected ?? true;\n  });\n"]}