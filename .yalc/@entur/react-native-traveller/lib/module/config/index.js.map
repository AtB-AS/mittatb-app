{"version":3,"sources":["index.ts"],"names":["fetch","DEFAULT_CONFIG","hosts","pto","extraHeaders","getConfigFromInitialConfig","initialConfig"],"mappings":"AACA,cAAc,SAAd;AACA,OAAOA,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,cAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE;AADA,GADsB;AAI7BH,EAAAA,KAJ6B;AAK7BI,EAAAA,YAAY,EAAE;AALe,CAA/B;AAQA,OAAO,SAASC,0BAAT,CACLC,aADK,EAEG;AACR,MAAI,CAACA,aAAL,EAAoB,OAAOL,cAAP;AAEpB,SAAO,EACL,GAAGA,cADE;AAEL,OAAGK,aAFE;AAGLJ,IAAAA,KAAK,EAAE,EACL,GAAGD,cAAc,CAACC,KADb;AAEL,SAAGI,aAAa,CAACJ;AAFZ,KAHF;AAOLE,IAAAA,YAAY,EAAE,EACZ,GAAGH,cAAc,CAACG,YADN;AAEZ,SAAGE,aAAa,CAACF;AAFL;AAPT,GAAP;AAYD","sourcesContent":["import type { Config } from './types';\nexport * from './types';\nimport fetch from '../api/internal-fetcher';\n\nconst DEFAULT_CONFIG: Config = {\n  hosts: {\n    pto: '',\n  },\n  fetch,\n  extraHeaders: {},\n};\n\nexport function getConfigFromInitialConfig(\n  initialConfig?: Partial<Config>\n): Config {\n  if (!initialConfig) return DEFAULT_CONFIG;\n\n  return {\n    ...DEFAULT_CONFIG,\n    ...initialConfig,\n    hosts: {\n      ...DEFAULT_CONFIG.hosts,\n      ...initialConfig.hosts,\n    },\n    extraHeaders: {\n      ...DEFAULT_CONFIG.extraHeaders,\n      ...initialConfig.extraHeaders,\n    },\n  };\n}\n"]}