{"version":3,"sources":["index.ts"],"names":["getConfigFromInitialConfig","getToken","deleteToken","generateQrCode","createInitToken","createRenewToken","isTokenValid","createFetcher","RequestError","onStartup","fetcher","hosts","token","createClient","initialConfig","config","initToken"],"mappings":"AAAA,SACEA,0BADF,QAKO,UALP;AAMA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,cAAhC,QAAsD,UAAtD;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,YAA5C,QAAgE,SAAhE;AACA,SAASC,aAAT,QAA8B,WAA9B;AAGA,SAASD,YAAT,QAA6B,SAA7B;AACA,SAASE,YAAT,QAA6B,WAA7B;;AAGA,eAAeC,SAAf,CAAyBC,OAAzB,EAAyCC,KAAzC,EAAuD;AACrD,QAAMC,KAAK,GAAG,MAAMX,QAAQ,EAA5B;;AAEA,MAAIW,KAAK,IAAI,CAACN,YAAY,CAACM,KAAD,CAA1B,EAAmC;AACjCP,IAAAA,gBAAgB,CAACK,OAAD,EAAUC,KAAV,CAAhB,CAAiCC,KAAjC;AACD;AACF;;AAED,eAAe,SAASC,YAAT,CAAsBC,aAAtB,EAAqD;AAClE,QAAMC,MAAM,GAAGf,0BAA0B,CAACc,aAAD,CAAzC;AACA,QAAMJ,OAAO,GAAGH,aAAa,CAACQ,MAAD,CAA7B;AAEAN,EAAAA,SAAS,CAACC,OAAD,EAAUK,MAAM,CAACJ,KAAjB,CAAT;AAEA,SAAO;AACLK,IAAAA,SAAS,EAAEZ,eAAe,CAACM,OAAD,EAAUK,MAAM,CAACJ,KAAjB,CADrB;AAELV,IAAAA,QAFK;AAGLC,IAAAA,WAHK;AAILC,IAAAA;AAJK,GAAP;AAMD","sourcesContent":["import {\n  getConfigFromInitialConfig,\n  Fetch,\n  InitialConfig,\n  Hosts,\n} from './config';\nimport { getToken, deleteToken, generateQrCode } from './native';\nimport { createInitToken, createRenewToken, isTokenValid } from './token';\nimport { createFetcher } from './fetcher';\n\nexport type { Token } from './native/types';\nexport { isTokenValid } from './token';\nexport { RequestError } from './fetcher';\nexport type { Fetch, ApiResponse, ApiRequest } from './config';\n\nasync function onStartup(fetcher: Fetch, hosts: Hosts) {\n  const token = await getToken();\n\n  if (token && !isTokenValid(token)) {\n    createRenewToken(fetcher, hosts)(token);\n  }\n}\n\nexport default function createClient(initialConfig?: InitialConfig) {\n  const config = getConfigFromInitialConfig(initialConfig);\n  const fetcher = createFetcher(config);\n\n  onStartup(fetcher, config.hosts);\n\n  return {\n    initToken: createInitToken(fetcher, config.hosts),\n    getToken,\n    deleteToken,\n    generateQrCode,\n  };\n}\n"]}