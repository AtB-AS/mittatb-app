{"version":3,"sources":["index.ts"],"names":["NativeModules","start","attest","attestLegacy","reattest","addToken","getToken","deleteToken","getSecureToken","getDeviceName","getAttestationSupport","EnturTraveller"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AA+CA,OAAO,MAAM;AACXC,EAAAA,KADW;AAEXC,EAAAA,MAFW;AAGXC,EAAAA,YAHW;AAIXC,EAAAA,QAJW;AAKXC,EAAAA,QALW;AAMXC,EAAAA,QANW;AAOXC,EAAAA,WAPW;AAQXC,EAAAA,cARW;AASXC,EAAAA,aATW;AAUXC,EAAAA;AAVW,IAWWV,aAAa,CAACW,cAX/B","sourcesContent":["import { NativeModules } from 'react-native';\nimport type {\n  AttestationData,\n  AttestationSupport,\n  LegacyAttestationData,\n  PayloadAction, ReattestationData,\n  Token,\n} from './types';\n\nexport type EnturTravellerType = {\n  start(safetyNetApiKey?: string): Promise<AttestationData>;\n  getAttestationSupport(): Promise<AttestationSupport>;\n  attest(\n    accountId: string,\n    tokenId: string,\n    nonce: string\n  ): Promise<AttestationData>;\n  attestLegacy(\n    accountId: string,\n    tokenId: string,\n    nonce: string,\n    serverPublicKey: string\n  ): Promise<LegacyAttestationData>;\n  reattest(\n    accountId: string,\n    tokenId: string,\n    nonce: string\n  ): Promise<ReattestationData>;\n  addToken(\n    accountId: string,\n    tokenId: string,\n    certificate: string,\n    tokenValidityStart: number,\n    tokenValidityEnd: number,\n    nonce?: string\n  ): Promise<void>;\n  getToken(accountId: string): Promise<Token | undefined>;\n  deleteToken(accountId: string): Promise<void>;\n  getSecureToken(\n    accountId: string,\n    tokenId: string,\n    includeCertificate: boolean,\n    actions: PayloadAction[]\n  ): Promise<string>;\n  getDeviceName(): Promise<string>;\n};\n\nexport const {\n  start,\n  attest,\n  attestLegacy,\n  reattest,\n  addToken,\n  getToken,\n  deleteToken,\n  getSecureToken,\n  getDeviceName,\n  getAttestationSupport,\n}: EnturTravellerType = NativeModules.EnturTraveller;\n"]}