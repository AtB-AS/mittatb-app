{"version":3,"sources":["AddTokenHandler.ts"],"names":["addToken","stateHandlerFactory","addTokenHandler","_","s","certificate","tokenId","tokenValidityEnd","tokenValidityStart","activatedData","state"],"mappings":"AAAA,SAASA,QAAT,QAAyB,iBAAzB;AAEA,SAAuBC,mBAAvB,QAAkD,mBAAlD;AAEA,eAAe,SAASC,eAAT,CAAyBC,CAAzB,EAA4D;AACzE,SAAOF,mBAAmB,CAAC,CAAC,UAAD,CAAD,EAAe,MAAOG,CAAP,IAAa;AACpD,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFJ,CAAC,CAACK,aALN;AAOA,UAAMT,QAAQ,CAACM,OAAD,EAAUD,WAAV,EAAuBG,kBAAvB,EAA2CD,gBAA3C,CAAd;AACA,WAAO;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD,GAVyB,CAA1B;AAWD","sourcesContent":["import { addToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function addTokenHandler(_: AbtTokensService): StateHandler {\n  return stateHandlerFactory(['AddToken'], async (s) => {\n    const {\n      certificate,\n      tokenId,\n      tokenValidityEnd,\n      tokenValidityStart,\n    } = s.activatedData;\n\n    await addToken(tokenId, certificate, tokenValidityStart, tokenValidityEnd);\n    return { state: 'Valid' };\n  });\n}\n"]}