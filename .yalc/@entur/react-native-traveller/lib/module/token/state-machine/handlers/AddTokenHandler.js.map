{"version":3,"sources":["AddTokenHandler.ts"],"names":["addToken","stateHandlerFactory","addTokenHandler","accountId","s","certificate","tokenId","tokenValidityEnd","tokenValidityStart","activatedData","state"],"mappings":"AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAAuBC,mBAAvB,QAAkD,mBAAlD;AAEA,eAAe,SAASC,eAAT,CAAyBC,SAAzB,EAA0D;AACvE,SAAOF,mBAAmB,CAAC,CAAC,UAAD,CAAD,EAAe,MAAOG,CAAP,IAAa;AACpD,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFJ,CAAC,CAACK,aALN;AAOA,UAAMT,QAAQ,CACZG,SADY,EAEZG,OAFY,EAGZD,WAHY,EAIZG,kBAJY,EAKZD,gBALY,CAAd;AAOA,WAAO;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD,GAhByB,CAA1B;AAiBD","sourcesContent":["import { addToken } from '../../../native';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function addTokenHandler(accountId: string): StateHandler {\n  return stateHandlerFactory(['AddToken'], async (s) => {\n    const {\n      certificate,\n      tokenId,\n      tokenValidityEnd,\n      tokenValidityStart,\n    } = s.activatedData;\n\n    await addToken(\n      accountId,\n      tokenId,\n      certificate,\n      tokenValidityStart,\n      tokenValidityEnd\n    );\n    return { state: 'Valid' };\n  });\n}\n"]}