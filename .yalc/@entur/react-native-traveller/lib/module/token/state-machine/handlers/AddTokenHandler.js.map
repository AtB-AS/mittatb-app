{"version":3,"sources":["AddTokenHandler.ts"],"names":["addToken","stateHandlerFactory","addTokenHandler","s","certificate","tokenId","tokenValidityEnd","tokenValidityStart","activatedData","accountId","state"],"mappings":"AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAAuBC,mBAAvB,QAAkD,mBAAlD;AAEA,eAAe,SAASC,eAAT,GAAyC;AACtD,SAAOD,mBAAmB,CAAC,CAAC,UAAD,CAAD,EAAe,MAAOE,CAAP,IAAa;AACpD,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA;AAJI,QAKFJ,CAAC,CAACK,aALN;AAOA,UAAMR,QAAQ,CACZG,CAAC,CAACM,SADU,EAEZJ,OAFY,EAGZD,WAHY,EAIZG,kBAJY,EAKZD,gBALY,CAAd;AAOA,WAAO;AACLG,MAAAA,SAAS,EAAEN,CAAC,CAACM,SADR;AAELC,MAAAA,KAAK,EAAE,wBAFF;AAGLL,MAAAA;AAHK,KAAP;AAKD,GApByB,CAA1B;AAqBD","sourcesContent":["import { addToken } from '../../../native';\nimport { StateHandler, stateHandlerFactory } from '../HandlerFactory';\n\nexport default function addTokenHandler(): StateHandler {\n  return stateHandlerFactory(['AddToken'], async (s) => {\n    const {\n      certificate,\n      tokenId,\n      tokenValidityEnd,\n      tokenValidityStart,\n    } = s.activatedData;\n\n    await addToken(\n      s.accountId,\n      tokenId,\n      certificate,\n      tokenValidityStart,\n      tokenValidityEnd\n    );\n    return {\n      accountId: s.accountId,\n      state: 'VerifyInspectionAction',\n      tokenId,\n    };\n  });\n}\n"]}