{"version":3,"sources":["AttestHandler.ts"],"names":["logger","getActivateTokenRequestBody","stateHandlerFactory","attestHandler","s","initiatedData","tokenId","nonce","attestationEncryptionPublicKey","accountId","state","info","undefined","activateTokenRequestBody","oldTokenId","attestationData"],"mappings":"AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,2BAAT,QAA4C,cAA5C;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAEA,eAAe,SAASC,aAAT,GAAuC;AACpD,SAAOD,mBAAmB,CAAC,CAAC,WAAD,EAAc,eAAd,CAAD,EAAiC,MAAOE,CAAP,IAAa;AACtE,UAAM;AACJC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA;AAAlB,OADX;AAEJC,MAAAA,SAFI;AAGJC,MAAAA;AAHI,QAIFN,CAJJ;AAMAJ,IAAAA,MAAM,CAACW,IAAP,CAAY,2BAAZ,EAAyCC,SAAzC,EAAoD;AAClDH,MAAAA,SADkD;AAElDH,MAAAA,OAFkD;AAGlDI,MAAAA;AAHkD,KAApD;AAMA,UAAMG,wBAAwB,GAAG,MAAMZ,2BAA2B,CAChEQ,SADgE,EAEhEH,OAFgE,EAGhEC,KAHgE,EAIhEC,8BAJgE,CAAlE;;AAOA,QAAIJ,CAAC,CAACM,KAAF,KAAY,WAAhB,EAA6B;AAC3B,aAAO;AACLD,QAAAA,SAAS,EAAEA,SADN;AAELC,QAAAA,KAAK,EAAE,iBAFF;AAGLI,QAAAA,UAAU,EAAEV,CAAC,CAACU,UAHT;AAILR,QAAAA,OAAO,EAAEA,OAJJ;AAKLS,QAAAA,eAAe,EAAEF;AALZ,OAAP;AAOD;;AAED,WAAO;AACLJ,MAAAA,SAAS,EAAEA,SADN;AAELC,MAAAA,KAAK,EAAE,aAFF;AAGLJ,MAAAA,OAAO,EAAEA,OAHJ;AAILS,MAAAA,eAAe,EAAEF;AAJZ,KAAP;AAMD,GApCyB,CAA1B;AAqCD","sourcesContent":["import { logger } from '../../../logger';\nimport { getActivateTokenRequestBody } from '../../attest';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function attestHandler(): StateHandler {\n  return stateHandlerFactory(['AttestNew', 'AttestRenewal'], async (s) => {\n    const {\n      initiatedData: { tokenId, nonce, attestationEncryptionPublicKey },\n      accountId,\n      state,\n    } = s;\n\n    logger.info('mobiletoken_status_change', undefined, {\n      accountId,\n      tokenId,\n      state,\n    });\n\n    const activateTokenRequestBody = await getActivateTokenRequestBody(\n      accountId,\n      tokenId,\n      nonce,\n      attestationEncryptionPublicKey\n    );\n\n    if (s.state !== 'AttestNew') {\n      return {\n        accountId: accountId,\n        state: 'ActivateRenewal',\n        oldTokenId: s.oldTokenId,\n        tokenId: tokenId,\n        attestationData: activateTokenRequestBody,\n      };\n    }\n\n    return {\n      accountId: accountId,\n      state: 'ActivateNew',\n      tokenId: tokenId,\n      attestationData: activateTokenRequestBody,\n    };\n  });\n}\n"]}