{"version":3,"sources":["AttestHandler.ts"],"names":["getActivateTokenRequestBody","stateHandlerFactory","attestHandler","s","tokenId","nonce","attestationEncryptionPublicKey","initiatedData","activateTokenRequestBody","accountId","state","oldTokenId","attestationData"],"mappings":"AAAA,SAASA,2BAAT,QAA4C,cAA5C;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAEA,eAAe,SAASC,aAAT,GAAuC;AACpD,SAAOD,mBAAmB,CAAC,CAAC,WAAD,EAAc,eAAd,CAAD,EAAiC,MAAOE,CAAP,IAAa;AACtE,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAAqDH,CAAC,CAACI,aAA7D;AACA,UAAMC,wBAAwB,GAAG,MAAMR,2BAA2B,CAChEG,CAAC,CAACM,SAD8D,EAEhEL,OAFgE,EAGhEC,KAHgE,EAIhEC,8BAJgE,CAAlE;;AAOA,QAAIH,CAAC,CAACO,KAAF,KAAY,WAAhB,EAA6B;AAC3B,aAAO;AACLD,QAAAA,SAAS,EAAEN,CAAC,CAACM,SADR;AAELC,QAAAA,KAAK,EAAE,iBAFF;AAGLC,QAAAA,UAAU,EAAER,CAAC,CAACQ,UAHT;AAILP,QAAAA,OAAO,EAAEA,OAJJ;AAKLQ,QAAAA,eAAe,EAAEJ;AALZ,OAAP;AAOD;;AAED,WAAO;AACLC,MAAAA,SAAS,EAAEN,CAAC,CAACM,SADR;AAELC,MAAAA,KAAK,EAAE,aAFF;AAGLN,MAAAA,OAAO,EAAEA,OAHJ;AAILQ,MAAAA,eAAe,EAAEJ;AAJZ,KAAP;AAMD,GAzByB,CAA1B;AA0BD","sourcesContent":["import { getActivateTokenRequestBody } from '../../attest';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function attestHandler(): StateHandler {\n  return stateHandlerFactory(['AttestNew', 'AttestRenewal'], async (s) => {\n    const { tokenId, nonce, attestationEncryptionPublicKey } = s.initiatedData;\n    const activateTokenRequestBody = await getActivateTokenRequestBody(\n      s.accountId,\n      tokenId,\n      nonce,\n      attestationEncryptionPublicKey\n    );\n\n    if (s.state !== 'AttestNew') {\n      return {\n        accountId: s.accountId,\n        state: 'ActivateRenewal',\n        oldTokenId: s.oldTokenId,\n        tokenId: tokenId,\n        attestationData: activateTokenRequestBody,\n      };\n    }\n\n    return {\n      accountId: s.accountId,\n      state: 'ActivateNew',\n      tokenId: tokenId,\n      attestationData: activateTokenRequestBody,\n    };\n  });\n}\n"]}