{"version":3,"sources":["AttestHandler.ts"],"names":["getActivateTokenRequestBody","stateHandlerFactory","attestHandler","_","s","tokenId","nonce","attestationEncryptionPublicKey","initiatedData","activateTokenRequestBody","state","attestationData"],"mappings":"AAAA,SAASA,2BAAT,QAA4C,cAA5C;AAGA,SAASC,mBAAT,QAAoC,mBAApC;AAEA,eAAe,SAASC,aAAT,CAAuBC,CAAvB,EAA0D;AACvE,SAAOF,mBAAmB,CAAC,CAAC,WAAD,EAAc,eAAd,CAAD,EAAiC,MAAOG,CAAP,IAAa;AACtE,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAAqDH,CAAC,CAACI,aAA7D;AAEA,UAAMC,wBAAwB,GAAG,MAAMT,2BAA2B,CAChEK,OADgE,EAEhEC,KAFgE,EAGhEC,8BAHgE,CAAlE;AAMA,WAAO;AACLG,MAAAA,KAAK,EAAEN,CAAC,CAACM,KAAF,KAAY,WAAZ,GAA0B,aAA1B,GAA0C,iBAD5C;AAELL,MAAAA,OAAO,EAAEA,OAFJ;AAGLM,MAAAA,eAAe,EAAEF;AAHZ,KAAP;AAKD,GAdyB,CAA1B;AAeD","sourcesContent":["import { getActivateTokenRequestBody } from '../../attest';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function attestHandler(_: AbtTokensService): StateHandler {\n  return stateHandlerFactory(['AttestNew', 'AttestRenewal'], async (s) => {\n    const { tokenId, nonce, attestationEncryptionPublicKey } = s.initiatedData;\n\n    const activateTokenRequestBody = await getActivateTokenRequestBody(\n      tokenId,\n      nonce,\n      attestationEncryptionPublicKey\n    );\n\n    return {\n      state: s.state === 'AttestNew' ? 'ActivateNew' : 'ActivateRenewal',\n      tokenId: tokenId,\n      attestationData: activateTokenRequestBody,\n    };\n  });\n}\n"]}