{"version":3,"sources":["AttestHandler.ts"],"names":["getActivateTokenRequestBody","stateHandlerFactory","attestHandler","getClientState","s","tokenId","nonce","attestationEncryptionPublicKey","initiatedData","accountId","activateTokenRequestBody","state","attestationData"],"mappings":"AAAA,SAASA,2BAAT,QAA4C,cAA5C;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAGA,eAAe,SAASC,aAAT,CACbC,cADa,EAEC;AACd,SAAOF,mBAAmB,CAAC,CAAC,WAAD,EAAc,eAAd,CAAD,EAAiC,MAAOG,CAAP,IAAa;AACtE,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAAqDH,CAAC,CAACI,aAA7D;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAgBN,cAAc,EAApC;AACA,UAAMO,wBAAwB,GAAG,MAAMV,2BAA2B,CAChES,SADgE,EAEhEJ,OAFgE,EAGhEC,KAHgE,EAIhEC,8BAJgE,CAAlE;AAOA,WAAO;AACLI,MAAAA,KAAK,EAAEP,CAAC,CAACO,KAAF,KAAY,WAAZ,GAA0B,aAA1B,GAA0C,iBAD5C;AAELN,MAAAA,OAAO,EAAEA,OAFJ;AAGLO,MAAAA,eAAe,EAAEF;AAHZ,KAAP;AAKD,GAfyB,CAA1B;AAgBD","sourcesContent":["import { getActivateTokenRequestBody } from '../../attest';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport type { ClientState } from '../../..';\n\nexport default function attestHandler(\n  getClientState: () => Required<ClientState>\n): StateHandler {\n  return stateHandlerFactory(['AttestNew', 'AttestRenewal'], async (s) => {\n    const { tokenId, nonce, attestationEncryptionPublicKey } = s.initiatedData;\n    const { accountId } = getClientState();\n    const activateTokenRequestBody = await getActivateTokenRequestBody(\n      accountId,\n      tokenId,\n      nonce,\n      attestationEncryptionPublicKey\n    );\n\n    return {\n      state: s.state === 'AttestNew' ? 'ActivateNew' : 'ActivateRenewal',\n      tokenId: tokenId,\n      attestationData: activateTokenRequestBody,\n    };\n  });\n}\n"]}