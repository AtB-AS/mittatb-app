{"version":3,"sources":["GetTokenCertificateHandler.ts"],"names":["getSecureToken","PayloadAction","stateHandlerFactory","getTokenCertificateHandler","abtTokensService","getClientState","_","accountId","signedToken","addRemoveToken","tokenCertificateResponse","getTokenCertificate","state","activatedData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAGA,eAAe,SAASC,0BAAT,CACbC,gBADa,EAEbC,cAFa,EAGC;AACd,SAAOH,mBAAmB,CAAC,CAAC,yBAAD,CAAD,EAA8B,MAAOI,CAAP,IAAa;AACnE,UAAM;AAAEC,MAAAA;AAAF,QAAgBF,cAAc,EAApC;AACA,UAAMG,WAAW,GAAG,MAAMR,cAAc,CAACO,SAAD,EAAY,CAClDN,aAAa,CAACQ,cADoC,CAAZ,CAAxC;AAGA,UAAMC,wBAAwB,GAAG,MAAMN,gBAAgB,CAACO,mBAAjB,CACrCH,WADqC,CAAvC;AAGA,WAAO;AAAEI,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,aAAa,EAAEH;AAApC,KAAP;AACD,GATyB,CAA1B;AAUD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport type { ClientState } from '../../..';\n\nexport default function getTokenCertificateHandler(\n  abtTokensService: AbtTokensService,\n  getClientState: () => Required<ClientState>\n): StateHandler {\n  return stateHandlerFactory(['GettingTokenCertificate'], async (_) => {\n    const { accountId } = getClientState();\n    const signedToken = await getSecureToken(accountId, [\n      PayloadAction.addRemoveToken,\n    ]);\n    const tokenCertificateResponse = await abtTokensService.getTokenCertificate(\n      signedToken\n    );\n    return { state: 'AddToken', activatedData: tokenCertificateResponse };\n  });\n}\n"]}