{"version":3,"sources":["GetTokenCertificateHandler.ts"],"names":["getSecureToken","PayloadAction","stateHandlerFactory","getTokenCertificateHandler","abtTokensService","_","signedToken","addRemoveToken","tokenCertificateResponse","getTokenCertificate","state","activatedData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAEA,eAAe,SAASC,0BAAT,CACbC,gBADa,EAEC;AACd,SAAOF,mBAAmB,CAAC,CAAC,yBAAD,CAAD,EAA8B,MAAOG,CAAP,IAAa;AACnE,UAAMC,WAAW,GAAG,MAAMN,cAAc,CAAC,CAACC,aAAa,CAACM,cAAf,CAAD,CAAxC;AACA,UAAMC,wBAAwB,GAAG,MAAMJ,gBAAgB,CAACK,mBAAjB,CACrCH,WADqC,CAAvC;AAGA,WAAO;AAAEI,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,aAAa,EAAEH;AAApC,KAAP;AACD,GANyB,CAA1B;AAOD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function getTokenCertificateHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['GettingTokenCertificate'], async (_) => {\n    const signedToken = await getSecureToken([PayloadAction.addRemoveToken]);\n    const tokenCertificateResponse = await abtTokensService.getTokenCertificate(\n      signedToken\n    );\n    return { state: 'AddToken', activatedData: tokenCertificateResponse };\n  });\n}\n"]}