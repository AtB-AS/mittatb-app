{"version":3,"sources":["GetTokenCertificateHandler.ts"],"names":["getSecureToken","PayloadAction","stateHandlerFactory","getTokenCertificateHandler","abtTokensService","s","signedToken","accountId","addRemoveToken","tokenCertificateResponse","getTokenCertificate","state","activatedData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAEA,eAAe,SAASC,0BAAT,CACbC,gBADa,EAEC;AACd,SAAOF,mBAAmB,CAAC,CAAC,yBAAD,CAAD,EAA8B,MAAOG,CAAP,IAAa;AACnE,UAAMC,WAAW,GAAG,MAAMN,cAAc,CAACK,CAAC,CAACE,SAAH,EAAc,CACpDN,aAAa,CAACO,cADsC,CAAd,CAAxC;AAGA,UAAMC,wBAAwB,GAAG,MAAML,gBAAgB,CAACM,mBAAjB,CACrCJ,WADqC,CAAvC;AAGA,WAAO;AACLC,MAAAA,SAAS,EAAEF,CAAC,CAACE,SADR;AAELI,MAAAA,KAAK,EAAE,UAFF;AAGLC,MAAAA,aAAa,EAAEH;AAHV,KAAP;AAKD,GAZyB,CAA1B;AAaD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function getTokenCertificateHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['GettingTokenCertificate'], async (s) => {\n    const signedToken = await getSecureToken(s.accountId, [\n      PayloadAction.addRemoveToken,\n    ]);\n    const tokenCertificateResponse = await abtTokensService.getTokenCertificate(\n      signedToken\n    );\n    return {\n      accountId: s.accountId,\n      state: 'AddToken',\n      activatedData: tokenCertificateResponse,\n    };\n  });\n}\n"]}