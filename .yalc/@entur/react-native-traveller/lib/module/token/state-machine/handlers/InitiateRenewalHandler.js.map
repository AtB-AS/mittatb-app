{"version":3,"sources":["InitiateRenewalHandler.ts"],"names":["getSecureToken","PayloadAction","stateHandlerFactory","initiateRenewalHandler","abtTokensService","getClientState","accountId","signedToken","addRemoveToken","renewTokenResponse","renewToken","state","initiatedData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAGA,eAAe,SAASC,sBAAT,CACbC,gBADa,EAEbC,cAFa,EAGC;AACd,SAAOH,mBAAmB,CAAC,CAAC,iBAAD,CAAD,EAAsB,YAAY;AAC1D,UAAM;AAAEI,MAAAA;AAAF,QAAgBD,cAAc,EAApC;AACA,UAAME,WAAW,GAAG,MAAMP,cAAc,CAACM,SAAD,EAAY,CAClDL,aAAa,CAACO,cADoC,CAAZ,CAAxC;AAGA,UAAMC,kBAAkB,GAAG,MAAML,gBAAgB,CAACM,UAAjB,CAA4BH,WAA5B,CAAjC;AACA,WAAO;AAAEI,MAAAA,KAAK,EAAE,eAAT;AAA0BC,MAAAA,aAAa,EAAEH;AAAzC,KAAP;AACD,GAPyB,CAA1B;AAQD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport type { ClientState } from '../../..';\n\nexport default function initiateRenewalHandler(\n  abtTokensService: AbtTokensService,\n  getClientState: () => Required<ClientState>\n): StateHandler {\n  return stateHandlerFactory(['InitiateRenewal'], async () => {\n    const { accountId } = getClientState();\n    const signedToken = await getSecureToken(accountId, [\n      PayloadAction.addRemoveToken,\n    ]);\n    const renewTokenResponse = await abtTokensService.renewToken(signedToken);\n    return { state: 'AttestRenewal', initiatedData: renewTokenResponse };\n  });\n}\n"]}