{"version":3,"sources":["InitiateRenewalHandler.ts"],"names":["getSecureToken","PayloadAction","stateHandlerFactory","logger","initiateRenewalHandler","abtTokensService","s","accountId","tokenId","info","undefined","signedToken","addRemoveToken","renewTokenResponse","renewToken","oldTokenId","state","initiatedData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,eAAe,SAASC,sBAAT,CACbC,gBADa,EAEC;AACd,SAAOH,mBAAmB,CAAC,CAAC,iBAAD,CAAD,EAAsB,MAAOI,CAAP,IAAa;AAC3D,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBF,CAA/B;AACAH,IAAAA,MAAM,CAACM,IAAP,CAAY,cAAZ,EAA4BC,SAA5B,EAAuC;AAAEH,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAvC;AAEA,UAAMG,WAAW,GAAG,MAAMX,cAAc,CAACO,SAAD,EAAYC,OAAZ,EAAqB,IAArB,EAA2B,CACjEP,aAAa,CAACW,cADmD,CAA3B,CAAxC;AAGA,UAAMC,kBAAkB,GAAG,MAAMR,gBAAgB,CAACS,UAAjB,CAA4BH,WAA5B,CAAjC;AACA,WAAO;AACLJ,MAAAA,SADK;AAELQ,MAAAA,UAAU,EAAEP,OAFP;AAGLQ,MAAAA,KAAK,EAAE,eAHF;AAILC,MAAAA,aAAa,EAAEJ;AAJV,KAAP;AAMD,GAdyB,CAA1B;AAeD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\nimport { logger } from '../../../logger';\n\nexport default function initiateRenewalHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['InitiateRenewal'], async (s) => {\n    const { accountId, tokenId } = s;\n    logger.info('init_renewal', undefined, { accountId, tokenId });\n\n    const signedToken = await getSecureToken(accountId, tokenId, true, [\n      PayloadAction.addRemoveToken,\n    ]);\n    const renewTokenResponse = await abtTokensService.renewToken(signedToken);\n    return {\n      accountId,\n      oldTokenId: tokenId,\n      state: 'AttestRenewal',\n      initiatedData: renewTokenResponse,\n    };\n  });\n}\n"]}