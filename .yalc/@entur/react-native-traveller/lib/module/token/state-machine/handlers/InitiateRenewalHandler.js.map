{"version":3,"sources":["InitiateRenewalHandler.ts"],"names":["getSecureToken","PayloadAction","stateHandlerFactory","initiateRenewalHandler","abtTokensService","signedToken","addRemoveToken","renewTokenResponse","renewToken","state","initiatedData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AAEA,eAAe,SAASC,sBAAT,CACbC,gBADa,EAEC;AACd,SAAOF,mBAAmB,CAAC,CAAC,iBAAD,CAAD,EAAsB,YAAY;AAC1D,UAAMG,WAAW,GAAG,MAAML,cAAc,CAAC,CAACC,aAAa,CAACK,cAAf,CAAD,CAAxC;AACA,UAAMC,kBAAkB,GAAG,MAAMH,gBAAgB,CAACI,UAAjB,CAA4BH,WAA5B,CAAjC;AACA,WAAO;AAAEI,MAAAA,KAAK,EAAE,eAAT;AAA0BC,MAAAA,aAAa,EAAEH;AAAzC,KAAP;AACD,GAJyB,CAA1B;AAKD","sourcesContent":["import { getSecureToken } from '../../../native';\nimport type { AbtTokensService } from '../../abt-tokens-service';\nimport { PayloadAction } from '../../../native/types';\nimport type { StateHandler } from '../HandlerFactory';\nimport { stateHandlerFactory } from '../HandlerFactory';\n\nexport default function initiateRenewalHandler(\n  abtTokensService: AbtTokensService\n): StateHandler {\n  return stateHandlerFactory(['InitiateRenewal'], async () => {\n    const signedToken = await getSecureToken([PayloadAction.addRemoveToken]);\n    const renewTokenResponse = await abtTokensService.renewToken(signedToken);\n    return { state: 'AttestRenewal', initiatedData: renewTokenResponse };\n  });\n}\n"]}