fastlane_version '2.142.0'

before_all do
  # ensure_git_status_clean
  # git_pull
end

platform :ios do
  desc 'Match certificates'
  lane :get_cert do 
    if is_ci
      create_keychain(
        name: "CI",
        password: ENV["MATCH_PASSWORD"],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )
      match(
        type: "adhoc",
        readonly: true,
        keychain_name: "CI",
        keychain_password: ENV["MATCH_PASSWORD"]
      )
    else
      match(type: 'adhoc', readonly: true)
    end
  end
  # iOS Lanes
  desc 'Build the iOS application.'
  lane :build do
      increment_build_number(
        build_number: ENV["BUILD_ID"], 
        xcodeproj: './ios/atb.xcodeproj/'
      )
      update_code_signing_settings(
        use_automatic_signing: false,
        bundle_identifier:"no.mittatb.staging",
        code_sign_identity:"iPhone Distribution",
        profile_name: "match AdHoc no.mittatb.staging",
        path: "./ios/atb.xcodeproj"
      )
      cocoapods(podfile: './ios/Podfile')
      build_app(
        scheme: 'atb', 
        configuration: 'Release', 
        workspace: './ios/atb.xcworkspace' 
      )
    end

  desc 'Upload the build to AppCenter'
  lane :appcenter do
    appcenter_upload(
      api_token: ENV["APPCENTER_API_KEY"],
      owner_name: "AtB-AS",
      app_name: "MittAtb-1",
      owner_type: "organization", 
      file: "AtB.ipa",
      notify_testers: false 
    )
  end
end

platform :android do
  desc 'Upload the build to AppCenter'

  lane :build do
    gradle(task: 'clean', project_dir: 'android/')
    sh("cp", "../keystore.jks", "../android/app/keystore.jks")
    gradle(
      task: 'assemble', 
      build_type: 'staging', 
      project_dir: 'android/', 
      print_command: false, #don't print my passwords please
      properties: {
        "versionCode" => ENV["BUILD_ID"],
        "android.injected.signing.store.file" => "./keystore.jks",
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASS"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASS"],
      })
    sh("pwd")
    sh("cp", "../android/app/build/outputs/apk/staging/app-staging.apk", "../")
  end

  lane :appcenter do
    appcenter_upload(
      api_token: ENV["APPCENTER_API_KEY"],
      owner_name: "AtB-AS",
      app_name: "MittAtb",
      owner_type: "organization", 
      file: "app-staging.apk",
      notify_testers: false 
    )
  end
end