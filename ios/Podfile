require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

production = ENV["PRODUCTION"] == "1"

ENV['REACT_NATIVE_MAPBOX_GL_USE_FRAMEWORKS'] = '1'
$ReactNativeMapboxGLIOSVersion = '6.3.0'

target 'atb' do
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true

  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :production => production,
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod "Intercom"

  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"

  $DontUseVendoredAbtMobile = true

  if ENV['GH_ACCESS_TOKEN']
    pod 'AbtTokenCoreSDK', :git => 'https://' + ENV['GH_ACCESS_TOKEN'] + '@github.com/AtB-AS/temp-token-core-ios-lib.git'
  else
    # If no GH_ACCESS_TOKEN in env, then probably locally where the user uses personal ssh key
    pod 'AbtTokenCoreSDK', :git => 'https://github.com/AtB-AS/temp-token-core-ios-lib.git'
  end
  pod 'token-state-react-native-lib-ios', :path => '../node_modules/@entur-private/abt-token-state-react-native-lib/ios'

  target 'atbTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
  
  pre_install do |installer|
    fix_mapbox_events(installer)
  end

  def fix_mapbox_events(installer)
    installer.pod_targets.each do |pod|
      if pod.name == 'MapboxMobileEvents'
        def pod.build_type;
          Pod::BuildType.dynamic_framework
        end
      end
    end
  end
end