plugin 'cocoapods-patch'

# Disable new architecture, this now comes true by default,
# but there are some of our dependencies still not compatible.
# For more details please check https://reactnative.dev/architecture/landing-page#ios
ENV['RCT_NEW_ARCH_ENABLED'] = '0'

def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')
node_require('@entur-private/abt-token-state-react-native-lib/entur_private_pods.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

setup_permissions([
  'Bluetooth',
  'Camera',
  'LocationAccuracy',
  'LocationAlways',
  'LocationWhenInUse',
  'Motion',
  'Notifications',
])

use_frameworks! :linkage => :static
$RNFirebaseAsStaticFramework = true

production = ENV["PRODUCTION"] == "1"

$RNMapboxMapsImpl = 'mapbox'

# Fix for: Apple Invalid Privacy Manifest
# https://github.com/mapbox/mapbox-maps-ios/releases/tag/v10.17.0
# This is a temporary fix until the next release of the Mapbox Maps SDK for React Native.
$RNMapboxMapsVersion = '~> 10.19.0'

target 'app' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :production => production,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod "Intercom"

  use_entur_private_pods

  if ENV['GH_ACCESS_TOKEN']
    pod 'AbtProtobufTokenIosStubs', :git => 'https://' + ENV['GH_ACCESS_TOKEN'] + '@github.com/entur/abt-protobuf-pods.git', :tag => '2.896.0'
  else
    # If no GH_ACCESS_TOKEN in env, then probably locally where the user uses personal ssh key
    pod 'AbtProtobufTokenIosStubs', :git => 'git@github.com:entur/abt-protobuf-pods.git', :tag => '2.896.0'
  end

  post_install do |installer|
    $RNMapboxMaps.post_install(installer)

    # Patch for issue using use_frameworks with hermes
    installer.pods_project.targets.each do |target|
      # Workaround fix for GRPC https://github.com/grpc/grpc/pull/36904 & Xcode 16
      if target.name == 'BoringSSL-GRPC'
        target.source_build_phase.files.each do |file|
          if file.settings && file.settings['COMPILER_FLAGS']
            flags = file.settings['COMPILER_FLAGS'].split
            flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
            file.settings['COMPILER_FLAGS'] = flags.join(' ')
          end
        end
      end

      target.build_configurations.each do |config|
        # Workaround fix for https://github.com/facebook/react-native/issues/34106#issuecomment-1417685116
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
      end
    end

    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    # Xcode 14 workaround: https://github.com/CocoaPods/CocoaPods/issues/11402#issuecomment-1201464693
    # https://stackoverflow.com/questions/48122769/facebook-cocoapods-sharedapplication-is-unavailable-not-available-on-ios-app
    # TODO: Find a better way to exclude react-native from extensions
    installer.pods_project.targets.each do |target|
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end

  pre_install do |installer|
    $RNMapboxMaps.pre_install(installer)
    # Workaround to get ReactNativeCameraKit to work with statically linked frameworks
    # https://github.com/teslamotors/react-native-camera-kit/issues/578#issuecomment-1920367530
    installer.pod_targets.each do |pod|
      if pod.name.eql?('ReactNativeCameraKit')
        def pod.build_type
          Pod::BuildType.static_library
        end
      end
    end
  end

end
