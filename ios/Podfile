def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

setup_permissions([
  'BluetoothPeripheral',
  'Camera',
  'LocationAccuracy',
  'LocationAlways',
  'LocationWhenInUse',
  'Motion',
  'Notifications',
])

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

production = ENV["PRODUCTION"] == "1"

$RNMapboxMapsImpl = 'mapbox'

target 'app' do
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseAppCheck'

  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :production => production,
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod "Intercom"

  $DontUseVendoredAbtMobile = true

  if ENV['GH_ACCESS_TOKEN']
    pod 'TokenCore', :git => 'https://' + ENV['GH_ACCESS_TOKEN'] + '@github.com/entur/abt-mobile-client-sdk', :tag => 'release-1.3.4'
    pod 'AbtProtobufTokenIosStubs', :git => 'https://' + ENV['GH_ACCESS_TOKEN'] + '@github.com/entur/abt-protobuf-pods.git', :tag => '2.724.0'
  else
    # If no GH_ACCESS_TOKEN in env, then probably locally where the user uses personal ssh key
    pod 'TokenCore', :git => 'git@github.com:entur/abt-mobile-client-sdk.git', :tag => 'release-1.3.4' # Possible to use ":branch => 'develop'" under local development
    pod 'AbtProtobufTokenIosStubs', :git => 'git@github.com:entur/abt-protobuf-pods.git', :tag => '2.724.0'
  end

  post_install do |installer|
    $RNMapboxMaps.post_install(installer)

    # Patch for issue using use_frameworks with hermes
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Workaround fix for https://github.com/facebook/react-native/issues/34106#issuecomment-1417685116
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
      end
    end

    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    # Xcode 14 workaround: https://github.com/CocoaPods/CocoaPods/issues/11402#issuecomment-1201464693
    # https://stackoverflow.com/questions/48122769/facebook-cocoapods-sharedapplication-is-unavailable-not-available-on-ios-app
    # TODO: Find a better way to exclude react-native from extensions
    installer.pods_project.targets.each do |target|
      # Workaround fix for Xcode 15.3
      # https://github.com/facebook/react-native/issues/43335#issuecomment-1980708164
      if target.name == 'Flipper'
        file_path = 'Pods/Flipper/xplat/Flipper/FlipperTransportTypes.h'
        contents = File.read(file_path)
        unless contents.include?('#include <functional>')
          File.open(file_path, 'w') do |file|
            file.puts('#include <functional>')
            file.puts(contents)
          end
        end
      end
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end

  pre_install do |installer|
    $RNMapboxMaps.pre_install(installer)
  end

end
