diff --git a/node_modules/@react-native-async-storage/async-storage/ios/RNCAsyncStorage.mm b/node_modules/@react-native-async-storage/async-storage/ios/RNCAsyncStorage.mm
index 4bfa945..62872e3 100644
--- a/node_modules/@react-native-async-storage/async-storage/ios/RNCAsyncStorage.mm
+++ b/node_modules/@react-native-async-storage/async-storage/ios/RNCAsyncStorage.mm
@@ -19,6 +19,7 @@
 static NSString *const RCTExpoStorageDirectory = @"RCTAsyncLocalStorage";
 static NSString *const RCTManifestFileName = @"manifest.json";
 static const NSUInteger RCTInlineValueThreshold = 1024;
+static NSString *AppGroupName;
 
 #pragma mark - Static helper functions
 
@@ -134,9 +135,14 @@ static void RCTAppendError(NSDictionary *error, NSMutableArray<NSDictionary *> *
     storageDirectoryPath =
         NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES).firstObject;
 #else
-    storageDirectoryPath =
+    if (!AppGroupName) {
+        storageDirectoryPath =
         NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, NSUserDomainMask, YES)
             .firstObject;
+    } else {
+        NSURL *pathUrl = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:AppGroupName];
+        storageDirectoryPath = pathUrl.path;
+    }
     // We should use the "Application Support/[bundleID]" folder for persistent data storage that's
     // hidden from users
     storageDirectoryPath = [storageDirectoryPath
@@ -174,7 +180,7 @@ static void RCTAppendError(NSDictionary *error, NSMutableArray<NSDictionary *> *
     static NSString *manifestFilePath = nil;
     static dispatch_once_t onceToken;
     dispatch_once(&onceToken, ^{
-      manifestFilePath = RCTCreateManifestFilePath(RCTStorageDirectory);
+        manifestFilePath = RCTCreateManifestFilePath(RCTStorageDirectory);
     });
     return manifestFilePath;
 }
@@ -662,8 +668,26 @@ - (BOOL)_passthroughDelegate
         [self.delegate respondsToSelector:@selector(isPassthrough)] && self.delegate.isPassthrough;
 }
 
+-(void)_setGroupName:(NSString *)groupName {
+    AppGroupName = groupName;
+}
+
 #pragma mark - Exported JS Functions
 
+// clang-format off
+RCT_EXPORT_METHOD(setAppGroupName:(NSString*)groupName
+                  callback:(RCTResponseSenderBlock)callback)
+// clang-format on
+{
+    [self _setGroupName: NULL];
+    NSString *oldDirectory = RCTCreateStorageDirectoryPath(RCTStorageDirectory);
+    [self _setGroupName: groupName];
+    NSString *newDirectory = RCTCreateStorageDirectoryPath(RCTStorageDirectory);
+    // Move files from previous location to a new one in the group
+    RCTStorageDirectoryMigrationCheck(oldDirectory, newDirectory, YES);
+    callback(@[RCTNullIfNil(nil)]);
+}
+
 // clang-format off
 RCT_EXPORT_METHOD(multiGet:(NSArray<NSString *> *)keys
                   callback:(RCTResponseSenderBlock)callback)
diff --git a/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.native.ts b/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.native.ts
index d7cbaf9..00b8c32 100644
--- a/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.native.ts
+++ b/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.native.ts
@@ -51,6 +51,19 @@ const AsyncStorage = ((): AsyncStorageStatic => {
   let _immediate: ReturnType<typeof setImmediate> | null = null;
 
   return {
+    setAppGroupName: (groupName, callback) => {
+      return new Promise((resolve, reject) => {
+        RCTAsyncStorage.setAppGroupName(groupName, (error?: ErrorLike) => {
+          const err = convertError(error);
+          callback?.(err);
+          if (err) {
+            reject(err);
+          } else {
+            resolve(undefined);
+          }
+        });
+      });
+    },
     /**
      * Fetches an item for a `key` and invokes a callback upon completion.
      *
diff --git a/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.ts b/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.ts
index 805253d..e6459eb 100644
--- a/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.ts
+++ b/node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.ts
@@ -66,6 +66,12 @@ function createPromiseAll<ReturnType, Result, ResultProcessor extends Function>(
 }
 
 const AsyncStorage: AsyncStorageStatic = {
+  /**
+  * Sets `groupName` value.
+  */
+  setAppGroupName: (_groupName, callback) => {
+    return createPromise(() => undefined, callback);
+  },
   /**
    * Fetches `key` value.
    */
diff --git a/node_modules/@react-native-async-storage/async-storage/src/types.ts b/node_modules/@react-native-async-storage/async-storage/src/types.ts
index 94cc27f..9ac737d 100644
--- a/node_modules/@react-native-async-storage/async-storage/src/types.ts
+++ b/node_modules/@react-native-async-storage/async-storage/src/types.ts
@@ -42,6 +42,7 @@ export type AsyncStorageHook = {
  * See https://react-native-async-storage.github.io/async-storage/docs/api
  */
 export type AsyncStorageStatic = {
+  setAppGroupName: (groupName?: string, callback?: Callback) => Promise<void>;
   /**
    * Fetches an item for a `key` and invokes a callback upon completion.
    *
