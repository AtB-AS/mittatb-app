diff --git a/node_modules/app-icon/bin/app-icon.js b/node_modules/app-icon/bin/app-icon.js
index 8e65574..97b1758 100755
--- a/node_modules/app-icon/bin/app-icon.js
+++ b/node_modules/app-icon/bin/app-icon.js
@@ -46,6 +46,7 @@ program
   .option('--background-icon [optional]', "The background icon path. Defaults to 'icon.background.png'")
   .option('--foreground-icon [optional]', "The foregroud icon path. Defaults to 'icon.foregroud.png'")
   .option('--adaptive-icons [optional]', "Additionally, generate Android Adaptive Icon templates. Defaults to 'false'")
+  .option('--rounded [optional]', 'Rounded options for Android, Possible values: [none, only].')
   .action(async (parameters) => {
     const {
       icon,
@@ -54,6 +55,7 @@ program
       search,
       platforms,
       adaptiveIcons,
+      rounded,
     } = parameters;
 
     await imageMagickCheck();
@@ -75,6 +77,7 @@ program
         searchRoot: search,
         platforms,
         adaptiveIcons,
+        rounded,
       });
     } catch (err) {
       console.error(chalk.red(`An error occurred generating the icons: ${err.message}`));
diff --git a/node_modules/app-icon/src/android/generate-manifest-icons.js b/node_modules/app-icon/src/android/generate-manifest-icons.js
index a11e70b..4406a1f 100644
--- a/node_modules/app-icon/src/android/generate-manifest-icons.js
+++ b/node_modules/app-icon/src/android/generate-manifest-icons.js
@@ -5,7 +5,7 @@ const androidManifestIcons = require('./AndroidManifest.icons.json');
 const resizeImage = require('../resize/resize-image');
 
 //  Generate Android Manifest icons given a manifest file.
-module.exports = async function generateManifestIcons(sourceIcon, manifest) {
+module.exports = async function generateManifestIcons(sourceIcon, manifest, rounded) {
   //  Create the object we will return.
   const results = {
     icons: [],
@@ -14,8 +14,21 @@ module.exports = async function generateManifestIcons(sourceIcon, manifest) {
   //  We've got the manifest file, get the parent folder.
   const manifestFolder = path.dirname(manifest);
 
+  function filterRounded(icon) {
+    if (!rounded) return true;
+
+    switch (rounded) {
+      case 'only':
+        return icon.path.indexOf('ic_launcher_round.png') !== -1;
+      case 'none':
+        return icon.path.indexOf('ic_launcher_round.png') === -1;
+      default:
+        return true;
+    }
+  }
+
   //  Generate each image in the full icon set, updating the contents.
-  await Promise.all(androidManifestIcons.icons.map(async (icon) => {
+  await Promise.all(androidManifestIcons.icons.filter(filterRounded).map(async (icon) => {
     const targetPath = path.join(manifestFolder, icon.path);
 
     //  Each icon lives in its own folder, so we'd better make sure that folder
diff --git a/node_modules/app-icon/src/generate.js b/node_modules/app-icon/src/generate.js
index 49c81ce..e337b66 100644
--- a/node_modules/app-icon/src/generate.js
+++ b/node_modules/app-icon/src/generate.js
@@ -15,6 +15,7 @@ module.exports = async function generate(parameters) {
     searchRoot,
     platforms,
     adaptiveIcons,
+    rounded,
   } = validateParameters(parameters || {});
 
   //  Set up the results object.
@@ -43,7 +44,7 @@ module.exports = async function generate(parameters) {
     if (!platforms.includes('android')) return null;
     console.log(`Found Android Manifest: ${manifest}...`);
 
-    const manResult = await generateManifestIcons(sourceIcon, manifest);
+    const manResult = await generateManifestIcons(sourceIcon, manifest, rounded);
     results.manifests.push({ manifest, icons: manResult.icons });
     manResult.icons.forEach((icon) => {
       console.log(`    ${chalk.green('âœ“')}  Generated icon ${icon}`);
diff --git a/node_modules/app-icon/src/validate-parameters.js b/node_modules/app-icon/src/validate-parameters.js
index b8abc68..bb8681f 100644
--- a/node_modules/app-icon/src/validate-parameters.js
+++ b/node_modules/app-icon/src/validate-parameters.js
@@ -21,6 +21,11 @@ module.exports = function validateParameters(parameters) {
   const backgroundIcon = parameters.backgroundIcon || 'icon.background.png';
   const foregroundIcon = parameters.foregroundIcon || 'icon.foreground.png';
 
+  const { rounded } = parameters;
+  if (rounded && (rounded !== 'none' && rounded !== 'only')) {
+    throw new Error(`--rounded option '${rounded}' unrecognized, expected 'none' or 'only'.`);
+  }
+
   return {
     sourceIcon,
     backgroundIcon,
@@ -28,5 +33,6 @@ module.exports = function validateParameters(parameters) {
     searchRoot,
     platforms,
     adaptiveIcons,
+    rounded,
   };
 };
