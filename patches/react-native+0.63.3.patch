diff --git a/node_modules/react-native/React/CoreModules/RCTAppearance.mm b/node_modules/react-native/React/CoreModules/RCTAppearance.mm
index c561676..7c568c9 100644
--- a/node_modules/react-native/React/CoreModules/RCTAppearance.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAppearance.mm
@@ -91,7 +91,9 @@ RCT_EXPORT_MODULE(Appearance)
 
 RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSString *, getColorScheme)
 {
-  _currentColorScheme = RCTColorSchemePreference(nil);
+   if (_currentColorScheme == nil) {
+    _currentColorScheme = RCTColorSchemePreference(nil);
+  }
   return _currentColorScheme;
 }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivity.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivity.java
index 4504a26..f7f1a53 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivity.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivity.java
@@ -8,6 +8,7 @@
 package com.facebook.react;
 
 import android.content.Intent;
+import android.content.res.Configuration;
 import android.os.Bundle;
 import android.view.KeyEvent;
 import androidx.annotation.Nullable;
@@ -120,6 +121,12 @@ public abstract class ReactActivity extends AppCompatActivity
     mDelegate.onWindowFocusChanged(hasFocus);
   }
 
+  @Override
+  public void onConfigurationChanged(Configuration newConfig) {
+    super.onConfigurationChanged(newConfig);
+    mDelegate.onConfigurationChanged(newConfig);
+  }
+
   protected final ReactNativeHost getReactNativeHost() {
     return mDelegate.getReactNativeHost();
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java
index 7083f86..1e1d54d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java
@@ -9,6 +9,7 @@ package com.facebook.react;
 
 import android.annotation.TargetApi;
 import android.app.Activity;
+	import android.content.res.Configuration;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Build;
@@ -154,6 +155,13 @@ public class ReactActivityDelegate {
     }
   }
   
+  public void onConfigurationChanged(Configuration newConfig) {
+    if (getReactNativeHost().hasInstance()) {
+      getReactInstanceManager().onConfigurationChanged(getContext(), newConfig);
+    }
+  }
+
+
   @TargetApi(Build.VERSION_CODES.M)
   public void requestPermissions(
       String[] permissions, int requestCode, PermissionListener listener) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java
index 99b7c53..c6cd1b5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java
@@ -7,6 +7,7 @@
 
 package com.facebook.react.modules.appearance;
 
+import android.app.Activity;
 import android.content.Context;
 import android.content.res.Configuration;
 import androidx.annotation.Nullable;
@@ -74,7 +75,11 @@ public class AppearanceModule extends NativeAppearanceSpec {
 
   @Override
   public String getColorScheme() {
-    mColorScheme = colorSchemeForCurrentConfiguration(getReactApplicationContext());
+    // Attempt to use the Activity context first in order to get the most up to date
+    // scheme. This covers the scenario when AppCompatDelegate.setDefaultNightMode() 
+    // is called directly (which can occur in Brownfield apps for example).
+    Activity activity = getCurrentActivity();
+    mColorScheme = colorSchemeForCurrentConfiguration(activity != null ? activity : getReactApplicationContext());
     return mColorScheme;
   }
 
diff --git a/node_modules/react-native/react.gradle b/node_modules/react-native/react.gradle
index 6441d93..b5a2ec4 100644
--- a/node_modules/react-native/react.gradle
+++ b/node_modules/react-native/react.gradle
@@ -129,6 +129,10 @@ afterEvaluate {
         
         def enableHermes = enableHermesForVariant(variant)
 
+        // Set up dev mod
+        def devEnabled = !(config."devDisabledIn${targetName}"
+            || targetName.toLowerCase().contains("release"))
+
         def currentBundleTask = tasks.create(
             name: "bundle${targetName}JsAndAssets",
             type: Exec) {
@@ -155,10 +159,6 @@ afterEvaluate {
             // Set up the call to the react-native cli
             workingDir(reactRoot)
 
-            // Set up dev mode
-            def devEnabled = !(config."devDisabledIn${targetName}"
-                || targetName.toLowerCase().contains("release"))
-
             def extraArgs = config.extraPackagerArgs ?: [];
 
             if (bundleConfig) {
@@ -177,7 +177,7 @@ afterEvaluate {
                     def hermesFlags;
                     def hbcTempFile = file("${jsBundleFile}.hbc")
                     exec {
-                        if (targetName.toLowerCase().contains("release")) {
+                        if (!devEnabled) {
                             // Can't use ?: since that will also substitute valid empty lists
                             hermesFlags = config.hermesFlagsRelease
                             if (hermesFlags == null) hermesFlags = ["-O", "-output-source-map"]
@@ -313,7 +313,6 @@ afterEvaluate {
         // This should really be done by packaging all Hermes releated libs into
         // two separate HermesDebug and HermesRelease AARs, but until then we'll
         // kludge it by deleting the .so files out of the /transforms/ directory.
-        def isRelease = targetName.toLowerCase().contains("release")
         def libDir = "$buildDir/intermediates/transforms/"
         def vmSelectionAction = {
             fileTree(libDir).matching {
@@ -321,7 +320,7 @@ afterEvaluate {
                     // For Hermes, delete all the libjsc* files
                     include "**/libjsc*.so"
 
-                    if (isRelease) {
+                    if (!devEnabled) {
                         // Reduce size by deleting the debugger/inspector
                         include '**/libhermes-inspector.so'
                         include '**/libhermes-executor-debug.so'
